import { Injectable } from '@angular/core';
import { BehaviorSubject } from 'rxjs';
import * as ɵngcc0 from '@angular/core';
export class MockReducerManager extends BehaviorSubject {
    constructor() {
        super(() => undefined);
    }
    addFeature(feature) {
        /* noop */
    }
    addFeatures(feature) {
        /* noop */
    }
    removeFeature(feature) {
        /* noop */
    }
    removeFeatures(features) {
        /* noop */
    }
    addReducer(key, reducer) {
        /* noop */
    }
    addReducers(reducers) {
        /* noop */
    }
    removeReducer(featureKey) {
        /* noop */
    }
    removeReducers(featureKeys) {
        /* noop */
    }
}
MockReducerManager.ɵfac = function MockReducerManager_Factory(t) { return new (t || MockReducerManager)(); };
MockReducerManager.ɵprov = /*@__PURE__*/ ɵngcc0.ɵɵdefineInjectable({ token: MockReducerManager, factory: MockReducerManager.ɵfac });
/**
 * @type {function(): !Array<(null|{
 *   type: ?,
 *   decorators: (undefined|!Array<{type: !Function, args: (undefined|!Array<?>)}>),
 * })>}
 * @nocollapse
 */
MockReducerManager.ctorParameters = () => [];
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MockReducerManager, [{
        type: Injectable
    }], function () { return []; }, null); })();

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibW9ja19yZWR1Y2VyX21hbmFnZXIuanMiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uL21vZHVsZXMvc3RvcmUvdGVzdGluZy9zcmMvbW9ja19yZWR1Y2VyX21hbmFnZXIudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUFFLFVBQVUsRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUMzQyxPQUFPLEVBQUUsZUFBZSxFQUFFLE1BQU0sTUFBTSxDQUFDOztBQUl2QyxNQUFNLE9BQU8sa0JBQW1CLFNBQVEsZUFFdkM7QUFDRCxJQUFFO0FBQ0YsUUFBSSxLQUFLLENBQUMsR0FBRyxFQUFFLENBQUMsU0FBUyxDQUFDLENBQUM7QUFDM0IsSUFBRSxDQUFDO0FBQ0gsSUFDRSxVQUFVLENBQUMsT0FBWTtBQUN6QixRQUFJLFVBQVU7QUFDZCxJQUFFLENBQUM7QUFDSCxJQUNFLFdBQVcsQ0FBQyxPQUFZO0FBQzFCLFFBQUksVUFBVTtBQUNkLElBQUUsQ0FBQztBQUNILElBQ0UsYUFBYSxDQUFDLE9BQVk7QUFDNUIsUUFBSSxVQUFVO0FBQ2QsSUFBRSxDQUFDO0FBQ0gsSUFDRSxjQUFjLENBQUMsUUFBYTtBQUM5QixRQUFJLFVBQVU7QUFDZCxJQUFFLENBQUM7QUFDSCxJQUNFLFVBQVUsQ0FBQyxHQUFRLEVBQUUsT0FBWTtBQUNuQyxRQUFJLFVBQVU7QUFDZCxJQUFFLENBQUM7QUFDSCxJQUNFLFdBQVcsQ0FBQyxRQUFhO0FBQzNCLFFBQUksVUFBVTtBQUNkLElBQUUsQ0FBQztBQUNILElBQ0UsYUFBYSxDQUFDLFVBQWU7QUFDL0IsUUFBSSxVQUFVO0FBQ2QsSUFBRSxDQUFDO0FBQ0gsSUFDRSxjQUFjLENBQUMsV0FBZ0I7QUFDakMsUUFBSSxVQUFVO0FBQ2QsSUFBRSxDQUFDO0FBQ0g7O01BdkNDLFVBQVUsb0hBQ1Q7QUFBQztBQUFJO0FBQXFDO0FBQzNDO0FBTUk7QUFBUTtBQUFlO0FBQ3pCOzs7Z0RBR3lCO0FBQUMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBJbmplY3RhYmxlIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBCZWhhdmlvclN1YmplY3QgfSBmcm9tICdyeGpzJztcbmltcG9ydCB7IEFjdGlvblJlZHVjZXIgfSBmcm9tICdAbmdyeC9zdG9yZSc7XG5cbkBJbmplY3RhYmxlKClcbmV4cG9ydCBjbGFzcyBNb2NrUmVkdWNlck1hbmFnZXIgZXh0ZW5kcyBCZWhhdmlvclN1YmplY3Q8XG4gIEFjdGlvblJlZHVjZXI8YW55LCBhbnk+XG4+IHtcbiAgY29uc3RydWN0b3IoKSB7XG4gICAgc3VwZXIoKCkgPT4gdW5kZWZpbmVkKTtcbiAgfVxuXG4gIGFkZEZlYXR1cmUoZmVhdHVyZTogYW55KSB7XG4gICAgLyogbm9vcCAqL1xuICB9XG5cbiAgYWRkRmVhdHVyZXMoZmVhdHVyZTogYW55KSB7XG4gICAgLyogbm9vcCAqL1xuICB9XG5cbiAgcmVtb3ZlRmVhdHVyZShmZWF0dXJlOiBhbnkpIHtcbiAgICAvKiBub29wICovXG4gIH1cblxuICByZW1vdmVGZWF0dXJlcyhmZWF0dXJlczogYW55KSB7XG4gICAgLyogbm9vcCAqL1xuICB9XG5cbiAgYWRkUmVkdWNlcihrZXk6IGFueSwgcmVkdWNlcjogYW55KSB7XG4gICAgLyogbm9vcCAqL1xuICB9XG5cbiAgYWRkUmVkdWNlcnMocmVkdWNlcnM6IGFueSkge1xuICAgIC8qIG5vb3AgKi9cbiAgfVxuXG4gIHJlbW92ZVJlZHVjZXIoZmVhdHVyZUtleTogYW55KSB7XG4gICAgLyogbm9vcCAqL1xuICB9XG5cbiAgcmVtb3ZlUmVkdWNlcnMoZmVhdHVyZUtleXM6IGFueSkge1xuICAgIC8qIG5vb3AgKi9cbiAgfVxufVxuIl19