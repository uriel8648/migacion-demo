"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.registerMockFunction = void 0;
var helper_create_clone_1 = __importDefault(require("./helper.create-clone"));
var helper_create_mock_from_prototype_1 = __importDefault(require("./helper.create-mock-from-prototype"));
var helper_define_property_descriptor_1 = __importDefault(require("./helper.define-property-descriptor"));
var helper_extract_methods_from_prototype_1 = __importDefault(require("./helper.extract-methods-from-prototype"));
var helper_extract_properties_from_prototype_1 = __importDefault(require("./helper.extract-properties-from-prototype"));
var helper_extract_property_descriptor_1 = __importDefault(require("./helper.extract-property-descriptor"));
var helper_mock_1 = __importDefault(require("./helper.mock"));
var helper_mock_function_1 = __importDefault(require("./helper.mock-function"));
var helper_replace_with_mocks_1 = __importDefault(require("./helper.replace-with-mocks"));
var helper_resolve_provider_1 = __importDefault(require("./helper.resolve-provider"));
var helper_use_factory_1 = __importDefault(require("./helper.use-factory"));
// istanbul ignore next
var getGlobal = function () { return window || global; };
// We need a single pointer to the object among all environments.
getGlobal().ngMockshelperMockService = getGlobal().ngMockshelperMockService || {
    mockFunction: helper_mock_function_1.default,
    registerMockFunction: function (func) {
        getGlobal().ngMockshelperMockService.mockFunction.customMockFunction = func;
    },
    createClone: helper_create_clone_1.default,
    createMockFromPrototype: helper_create_mock_from_prototype_1.default,
    definePropertyDescriptor: helper_define_property_descriptor_1.default,
    extractMethodsFromPrototype: helper_extract_methods_from_prototype_1.default,
    extractPropertiesFromPrototype: helper_extract_properties_from_prototype_1.default,
    extractPropertyDescriptor: helper_extract_property_descriptor_1.default,
    mock: helper_mock_1.default,
    replaceWithMocks: helper_replace_with_mocks_1.default,
    resolveProvider: helper_resolve_provider_1.default,
    useFactory: helper_use_factory_1.default,
};
exports.default = (function () { return getGlobal().ngMockshelperMockService; })();
exports.registerMockFunction = getGlobal().ngMockshelperMockService.registerMockFunction;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaGVscGVyLm1vY2stc2VydmljZS5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uLy4uL2xpYnMvbmctbW9ja3Mvc3JjL2xpYi9tb2NrLXNlcnZpY2UvaGVscGVyLm1vY2stc2VydmljZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7Ozs7QUFBQSw4RUFBc0Q7QUFDdEQsMEdBQWdGO0FBQ2hGLDBHQUFpRjtBQUNqRixrSEFBd0Y7QUFDeEYsd0hBQThGO0FBQzlGLDRHQUFtRjtBQUNuRiw4REFBdUM7QUFDdkMsZ0ZBQXdEO0FBQ3hELDBGQUFpRTtBQUNqRSxzRkFBOEQ7QUFDOUQsNEVBQW9EO0FBR3BELHVCQUF1QjtBQUN2QixJQUFNLFNBQVMsR0FBRyxjQUFXLE9BQUEsTUFBTSxJQUFJLE1BQU0sRUFBaEIsQ0FBZ0IsQ0FBQztBQUU5QyxpRUFBaUU7QUFDakUsU0FBUyxFQUFFLENBQUMsd0JBQXdCLEdBQUcsU0FBUyxFQUFFLENBQUMsd0JBQXdCLElBQUk7SUFDN0UsWUFBWSxFQUFFLDhCQUFrQjtJQUVoQyxvQkFBb0IsRUFBRSxVQUFDLElBQW9DO1FBQ3pELFNBQVMsRUFBRSxDQUFDLHdCQUF3QixDQUFDLFlBQVksQ0FBQyxrQkFBa0IsR0FBRyxJQUFJLENBQUM7SUFDOUUsQ0FBQztJQUVELFdBQVcsRUFBRSw2QkFBaUI7SUFDOUIsdUJBQXVCLEVBQUUsMkNBQTZCO0lBQ3RELHdCQUF3QixFQUFFLDJDQUE4QjtJQUN4RCwyQkFBMkIsRUFBRSwrQ0FBaUM7SUFDOUQsOEJBQThCLEVBQUUsa0RBQW9DO0lBQ3BFLHlCQUF5QixFQUFFLDRDQUErQjtJQUMxRCxJQUFJLEVBQUUscUJBQVU7SUFDaEIsZ0JBQWdCLEVBQUUsbUNBQXNCO0lBQ3hDLGVBQWUsRUFBRSxpQ0FBcUI7SUFDdEMsVUFBVSxFQUFFLDRCQUFnQjtDQUM3QixDQUFDO0FBRUYsa0JBQWUsQ0FBQyxjQWFYLE9BQUEsU0FBUyxFQUFFLENBQUMsd0JBQXdCLEVBQXBDLENBQW9DLENBQUMsRUFBRSxDQUFDO0FBRWhDLFFBQUEsb0JBQW9CLEdBQy9CLFNBQVMsRUFBRSxDQUFDLHdCQUF3QixDQUFDLG9CQUFvQixDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IGhlbHBlckNyZWF0ZUNsb25lIGZyb20gJy4vaGVscGVyLmNyZWF0ZS1jbG9uZSc7XG5pbXBvcnQgaGVscGVyQ3JlYXRlTW9ja0Zyb21Qcm90b3R5cGUgZnJvbSAnLi9oZWxwZXIuY3JlYXRlLW1vY2stZnJvbS1wcm90b3R5cGUnO1xuaW1wb3J0IGhlbHBlckRlZmluZVByb3BlcnR5RGVzY3JpcHRvciBmcm9tICcuL2hlbHBlci5kZWZpbmUtcHJvcGVydHktZGVzY3JpcHRvcic7XG5pbXBvcnQgaGVscGVyRXh0cmFjdE1ldGhvZHNGcm9tUHJvdG90eXBlIGZyb20gJy4vaGVscGVyLmV4dHJhY3QtbWV0aG9kcy1mcm9tLXByb3RvdHlwZSc7XG5pbXBvcnQgaGVscGVyRXh0cmFjdFByb3BlcnRpZXNGcm9tUHJvdG90eXBlIGZyb20gJy4vaGVscGVyLmV4dHJhY3QtcHJvcGVydGllcy1mcm9tLXByb3RvdHlwZSc7XG5pbXBvcnQgaGVscGVyRXh0cmFjdFByb3BlcnR5RGVzY3JpcHRvciBmcm9tICcuL2hlbHBlci5leHRyYWN0LXByb3BlcnR5LWRlc2NyaXB0b3InO1xuaW1wb3J0IGhlbHBlck1vY2sgZnJvbSAnLi9oZWxwZXIubW9jayc7XG5pbXBvcnQgaGVscGVyTW9ja0Z1bmN0aW9uIGZyb20gJy4vaGVscGVyLm1vY2stZnVuY3Rpb24nO1xuaW1wb3J0IGhlbHBlclJlcGxhY2VXaXRoTW9ja3MgZnJvbSAnLi9oZWxwZXIucmVwbGFjZS13aXRoLW1vY2tzJztcbmltcG9ydCBoZWxwZXJSZXNvbHZlUHJvdmlkZXIgZnJvbSAnLi9oZWxwZXIucmVzb2x2ZS1wcm92aWRlcic7XG5pbXBvcnQgaGVscGVyVXNlRmFjdG9yeSBmcm9tICcuL2hlbHBlci51c2UtZmFjdG9yeSc7XG5pbXBvcnQgeyBDdXN0b21Nb2NrRnVuY3Rpb24gfSBmcm9tICcuL3R5cGVzJztcblxuLy8gaXN0YW5idWwgaWdub3JlIG5leHRcbmNvbnN0IGdldEdsb2JhbCA9ICgpOiBhbnkgPT4gd2luZG93IHx8IGdsb2JhbDtcblxuLy8gV2UgbmVlZCBhIHNpbmdsZSBwb2ludGVyIHRvIHRoZSBvYmplY3QgYW1vbmcgYWxsIGVudmlyb25tZW50cy5cbmdldEdsb2JhbCgpLm5nTW9ja3NoZWxwZXJNb2NrU2VydmljZSA9IGdldEdsb2JhbCgpLm5nTW9ja3NoZWxwZXJNb2NrU2VydmljZSB8fCB7XG4gIG1vY2tGdW5jdGlvbjogaGVscGVyTW9ja0Z1bmN0aW9uLFxuXG4gIHJlZ2lzdGVyTW9ja0Z1bmN0aW9uOiAoZnVuYzogQ3VzdG9tTW9ja0Z1bmN0aW9uIHwgdW5kZWZpbmVkKSA9PiB7XG4gICAgZ2V0R2xvYmFsKCkubmdNb2Nrc2hlbHBlck1vY2tTZXJ2aWNlLm1vY2tGdW5jdGlvbi5jdXN0b21Nb2NrRnVuY3Rpb24gPSBmdW5jO1xuICB9LFxuXG4gIGNyZWF0ZUNsb25lOiBoZWxwZXJDcmVhdGVDbG9uZSxcbiAgY3JlYXRlTW9ja0Zyb21Qcm90b3R5cGU6IGhlbHBlckNyZWF0ZU1vY2tGcm9tUHJvdG90eXBlLFxuICBkZWZpbmVQcm9wZXJ0eURlc2NyaXB0b3I6IGhlbHBlckRlZmluZVByb3BlcnR5RGVzY3JpcHRvcixcbiAgZXh0cmFjdE1ldGhvZHNGcm9tUHJvdG90eXBlOiBoZWxwZXJFeHRyYWN0TWV0aG9kc0Zyb21Qcm90b3R5cGUsXG4gIGV4dHJhY3RQcm9wZXJ0aWVzRnJvbVByb3RvdHlwZTogaGVscGVyRXh0cmFjdFByb3BlcnRpZXNGcm9tUHJvdG90eXBlLFxuICBleHRyYWN0UHJvcGVydHlEZXNjcmlwdG9yOiBoZWxwZXJFeHRyYWN0UHJvcGVydHlEZXNjcmlwdG9yLFxuICBtb2NrOiBoZWxwZXJNb2NrLFxuICByZXBsYWNlV2l0aE1vY2tzOiBoZWxwZXJSZXBsYWNlV2l0aE1vY2tzLFxuICByZXNvbHZlUHJvdmlkZXI6IGhlbHBlclJlc29sdmVQcm92aWRlcixcbiAgdXNlRmFjdG9yeTogaGVscGVyVXNlRmFjdG9yeSxcbn07XG5cbmV4cG9ydCBkZWZhdWx0ICgoKToge1xuICBjcmVhdGVDbG9uZTogdHlwZW9mIGhlbHBlckNyZWF0ZUNsb25lO1xuICBjcmVhdGVNb2NrRnJvbVByb3RvdHlwZTogdHlwZW9mIGhlbHBlckNyZWF0ZU1vY2tGcm9tUHJvdG90eXBlO1xuICBkZWZpbmVQcm9wZXJ0eURlc2NyaXB0b3I6IHR5cGVvZiBoZWxwZXJEZWZpbmVQcm9wZXJ0eURlc2NyaXB0b3I7XG4gIGV4dHJhY3RNZXRob2RzRnJvbVByb3RvdHlwZTogdHlwZW9mIGhlbHBlckV4dHJhY3RNZXRob2RzRnJvbVByb3RvdHlwZTtcbiAgZXh0cmFjdFByb3BlcnRpZXNGcm9tUHJvdG90eXBlOiB0eXBlb2YgaGVscGVyRXh0cmFjdFByb3BlcnRpZXNGcm9tUHJvdG90eXBlO1xuICBleHRyYWN0UHJvcGVydHlEZXNjcmlwdG9yOiB0eXBlb2YgaGVscGVyRXh0cmFjdFByb3BlcnR5RGVzY3JpcHRvcjtcbiAgbW9jazogdHlwZW9mIGhlbHBlck1vY2s7XG4gIG1vY2tGdW5jdGlvbjogdHlwZW9mIGhlbHBlck1vY2tGdW5jdGlvbjtcbiAgcmVnaXN0ZXJNb2NrRnVuY3Rpb246IChmdW5jOiBDdXN0b21Nb2NrRnVuY3Rpb24gfCB1bmRlZmluZWQpID0+IHZvaWQ7XG4gIHJlcGxhY2VXaXRoTW9ja3M6IHR5cGVvZiBoZWxwZXJSZXBsYWNlV2l0aE1vY2tzO1xuICByZXNvbHZlUHJvdmlkZXI6IHR5cGVvZiBoZWxwZXJSZXNvbHZlUHJvdmlkZXI7XG4gIHVzZUZhY3Rvcnk6IHR5cGVvZiBoZWxwZXJVc2VGYWN0b3J5O1xufSA9PiBnZXRHbG9iYWwoKS5uZ01vY2tzaGVscGVyTW9ja1NlcnZpY2UpKCk7XG5cbmV4cG9ydCBjb25zdCByZWdpc3Rlck1vY2tGdW5jdGlvbjogKGZ1bmM/OiBDdXN0b21Nb2NrRnVuY3Rpb24gfCB1bmRlZmluZWQpID0+IHZvaWQgPVxuICBnZXRHbG9iYWwoKS5uZ01vY2tzaGVscGVyTW9ja1NlcnZpY2UucmVnaXN0ZXJNb2NrRnVuY3Rpb247XG4iXX0=