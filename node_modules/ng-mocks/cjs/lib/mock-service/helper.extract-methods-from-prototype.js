"use strict";
var __values = (this && this.__values) || function(o) {
    var s = typeof Symbol === "function" && Symbol.iterator, m = s && o[s], i = 0;
    if (m) return m.call(o);
    if (o && typeof o.length === "number") return {
        next: function () {
            if (o && i >= o.length) o = void 0;
            return { value: o && o[i++], done: !o };
        }
    };
    throw new TypeError(s ? "Object is not iterable." : "Symbol.iterator is not defined.");
};
Object.defineProperty(exports, "__esModule", { value: true });
var sanitizerMethods = [
    'sanitize',
    'bypassSecurityTrustHtml',
    'bypassSecurityTrustStyle',
    'bypassSecurityTrustScript',
    'bypassSecurityTrustUrl',
    'bypassSecurityTrustResourceUrl',
];
var extraMethods = {
    DomSanitizer: sanitizerMethods,
    Sanitizer: sanitizerMethods,
};
var getOwnPropertyNames = function (prototype) {
    var e_1, _a;
    var _b;
    var result = Object.getOwnPropertyNames(prototype);
    try {
        for (var _c = __values((_b = extraMethods[prototype.constructor.name]) !== null && _b !== void 0 ? _b : []), _d = _c.next(); !_d.done; _d = _c.next()) {
            var method = _d.value;
            result.push(method);
        }
    }
    catch (e_1_1) { e_1 = { error: e_1_1 }; }
    finally {
        try {
            if (_d && !_d.done && (_a = _c.return)) _a.call(_c);
        }
        finally { if (e_1) throw e_1.error; }
    }
    return result;
};
exports.default = (function (service) {
    var e_2, _a;
    var result = [];
    var prototype = service;
    while (prototype && Object.getPrototypeOf(prototype) !== null) {
        try {
            for (var _b = (e_2 = void 0, __values(getOwnPropertyNames(prototype))), _c = _b.next(); !_c.done; _c = _b.next()) {
                var method = _c.value;
                if (method === 'constructor') {
                    continue;
                }
                var descriptor = Object.getOwnPropertyDescriptor(prototype, method);
                var isGetterSetter = descriptor && (descriptor.get || descriptor.set);
                if (isGetterSetter || result.indexOf(method) !== -1) {
                    continue;
                }
                result.push(method);
            }
        }
        catch (e_2_1) { e_2 = { error: e_2_1 }; }
        finally {
            try {
                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
            }
            finally { if (e_2) throw e_2.error; }
        }
        prototype = Object.getPrototypeOf(prototype);
    }
    return result;
});
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaGVscGVyLmV4dHJhY3QtbWV0aG9kcy1mcm9tLXByb3RvdHlwZS5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uLy4uL2xpYnMvbmctbW9ja3Mvc3JjL2xpYi9tb2NrLXNlcnZpY2UvaGVscGVyLmV4dHJhY3QtbWV0aG9kcy1mcm9tLXByb3RvdHlwZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7O0FBQUEsSUFBTSxnQkFBZ0IsR0FBRztJQUN2QixVQUFVO0lBQ1YseUJBQXlCO0lBQ3pCLDBCQUEwQjtJQUMxQiwyQkFBMkI7SUFDM0Isd0JBQXdCO0lBQ3hCLGdDQUFnQztDQUNqQyxDQUFDO0FBRUYsSUFBTSxZQUFZLEdBQXlDO0lBQ3pELFlBQVksRUFBRSxnQkFBZ0I7SUFDOUIsU0FBUyxFQUFFLGdCQUFnQjtDQUM1QixDQUFDO0FBRUYsSUFBTSxtQkFBbUIsR0FBRyxVQUFDLFNBQWM7OztJQUN6QyxJQUFNLE1BQU0sR0FBYSxNQUFNLENBQUMsbUJBQW1CLENBQUMsU0FBUyxDQUFDLENBQUM7O1FBQy9ELEtBQXFCLElBQUEsS0FBQSxTQUFBLE1BQUEsWUFBWSxDQUFDLFNBQVMsQ0FBQyxXQUFXLENBQUMsSUFBSSxDQUFDLG1DQUFJLEVBQUUsQ0FBQSxnQkFBQSw0QkFBRTtZQUFoRSxJQUFNLE1BQU0sV0FBQTtZQUNmLE1BQU0sQ0FBQyxJQUFJLENBQUMsTUFBTSxDQUFDLENBQUM7U0FDckI7Ozs7Ozs7OztJQUVELE9BQU8sTUFBTSxDQUFDO0FBQ2hCLENBQUMsQ0FBQztBQUVGLG1CQUFlLFVBQUksT0FBVTs7SUFDM0IsSUFBTSxNQUFNLEdBQWEsRUFBRSxDQUFDO0lBRTVCLElBQUksU0FBUyxHQUFHLE9BQU8sQ0FBQztJQUN4QixPQUFPLFNBQVMsSUFBSSxNQUFNLENBQUMsY0FBYyxDQUFDLFNBQVMsQ0FBQyxLQUFLLElBQUksRUFBRTs7WUFDN0QsS0FBcUIsSUFBQSxvQkFBQSxTQUFBLG1CQUFtQixDQUFDLFNBQVMsQ0FBQyxDQUFBLENBQUEsZ0JBQUEsNEJBQUU7Z0JBQWhELElBQU0sTUFBTSxXQUFBO2dCQUNmLElBQUssTUFBYyxLQUFLLGFBQWEsRUFBRTtvQkFDckMsU0FBUztpQkFDVjtnQkFFRCxJQUFNLFVBQVUsR0FBRyxNQUFNLENBQUMsd0JBQXdCLENBQUMsU0FBUyxFQUFFLE1BQU0sQ0FBQyxDQUFDO2dCQUN0RSxJQUFNLGNBQWMsR0FBRyxVQUFVLElBQUksQ0FBQyxVQUFVLENBQUMsR0FBRyxJQUFJLFVBQVUsQ0FBQyxHQUFHLENBQUMsQ0FBQztnQkFDeEUsSUFBSSxjQUFjLElBQUksTUFBTSxDQUFDLE9BQU8sQ0FBQyxNQUFNLENBQUMsS0FBSyxDQUFDLENBQUMsRUFBRTtvQkFDbkQsU0FBUztpQkFDVjtnQkFDRCxNQUFNLENBQUMsSUFBSSxDQUFDLE1BQU0sQ0FBQyxDQUFDO2FBQ3JCOzs7Ozs7Ozs7UUFDRCxTQUFTLEdBQUcsTUFBTSxDQUFDLGNBQWMsQ0FBQyxTQUFTLENBQUMsQ0FBQztLQUM5QztJQUVELE9BQU8sTUFBTSxDQUFDO0FBQ2hCLENBQUMsRUFBQyIsInNvdXJjZXNDb250ZW50IjpbImNvbnN0IHNhbml0aXplck1ldGhvZHMgPSBbXG4gICdzYW5pdGl6ZScsXG4gICdieXBhc3NTZWN1cml0eVRydXN0SHRtbCcsXG4gICdieXBhc3NTZWN1cml0eVRydXN0U3R5bGUnLFxuICAnYnlwYXNzU2VjdXJpdHlUcnVzdFNjcmlwdCcsXG4gICdieXBhc3NTZWN1cml0eVRydXN0VXJsJyxcbiAgJ2J5cGFzc1NlY3VyaXR5VHJ1c3RSZXNvdXJjZVVybCcsXG5dO1xuXG5jb25zdCBleHRyYU1ldGhvZHM6IFJlY29yZDxzdHJpbmcsIHVuZGVmaW5lZCB8IHN0cmluZ1tdPiA9IHtcbiAgRG9tU2FuaXRpemVyOiBzYW5pdGl6ZXJNZXRob2RzLFxuICBTYW5pdGl6ZXI6IHNhbml0aXplck1ldGhvZHMsXG59O1xuXG5jb25zdCBnZXRPd25Qcm9wZXJ0eU5hbWVzID0gKHByb3RvdHlwZTogYW55KTogc3RyaW5nW10gPT4ge1xuICBjb25zdCByZXN1bHQ6IHN0cmluZ1tdID0gT2JqZWN0LmdldE93blByb3BlcnR5TmFtZXMocHJvdG90eXBlKTtcbiAgZm9yIChjb25zdCBtZXRob2Qgb2YgZXh0cmFNZXRob2RzW3Byb3RvdHlwZS5jb25zdHJ1Y3Rvci5uYW1lXSA/PyBbXSkge1xuICAgIHJlc3VsdC5wdXNoKG1ldGhvZCk7XG4gIH1cblxuICByZXR1cm4gcmVzdWx0O1xufTtcblxuZXhwb3J0IGRlZmF1bHQgPFQ+KHNlcnZpY2U6IFQpOiBzdHJpbmdbXSA9PiB7XG4gIGNvbnN0IHJlc3VsdDogc3RyaW5nW10gPSBbXTtcblxuICBsZXQgcHJvdG90eXBlID0gc2VydmljZTtcbiAgd2hpbGUgKHByb3RvdHlwZSAmJiBPYmplY3QuZ2V0UHJvdG90eXBlT2YocHJvdG90eXBlKSAhPT0gbnVsbCkge1xuICAgIGZvciAoY29uc3QgbWV0aG9kIG9mIGdldE93blByb3BlcnR5TmFtZXMocHJvdG90eXBlKSkge1xuICAgICAgaWYgKChtZXRob2QgYXMgYW55KSA9PT0gJ2NvbnN0cnVjdG9yJykge1xuICAgICAgICBjb250aW51ZTtcbiAgICAgIH1cblxuICAgICAgY29uc3QgZGVzY3JpcHRvciA9IE9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3IocHJvdG90eXBlLCBtZXRob2QpO1xuICAgICAgY29uc3QgaXNHZXR0ZXJTZXR0ZXIgPSBkZXNjcmlwdG9yICYmIChkZXNjcmlwdG9yLmdldCB8fCBkZXNjcmlwdG9yLnNldCk7XG4gICAgICBpZiAoaXNHZXR0ZXJTZXR0ZXIgfHwgcmVzdWx0LmluZGV4T2YobWV0aG9kKSAhPT0gLTEpIHtcbiAgICAgICAgY29udGludWU7XG4gICAgICB9XG4gICAgICByZXN1bHQucHVzaChtZXRob2QpO1xuICAgIH1cbiAgICBwcm90b3R5cGUgPSBPYmplY3QuZ2V0UHJvdG90eXBlT2YocHJvdG90eXBlKTtcbiAgfVxuXG4gIHJldHVybiByZXN1bHQ7XG59O1xuIl19