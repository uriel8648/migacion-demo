"use strict";
var __values = (this && this.__values) || function(o) {
    var s = typeof Symbol === "function" && Symbol.iterator, m = s && o[s], i = 0;
    if (m) return m.call(o);
    if (o && typeof o.length === "number") return {
        next: function () {
            if (o && i >= o.length) o = void 0;
            return { value: o && o[i++], done: !o };
        }
    };
    throw new TypeError(s ? "Object is not iterable." : "Symbol.iterator is not defined.");
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
var helper_mock_service_1 = __importDefault(require("./helper.mock-service"));
exports.default = (function (service) {
    var e_1, _a, e_2, _b;
    var mockName = service.constructor.name;
    var value = {};
    var methods = helper_mock_service_1.default.extractMethodsFromPrototype(service);
    try {
        for (var methods_1 = __values(methods), methods_1_1 = methods_1.next(); !methods_1_1.done; methods_1_1 = methods_1.next()) {
            var method = methods_1_1.value;
            helper_mock_service_1.default.mock(value, method, mockName);
        }
    }
    catch (e_1_1) { e_1 = { error: e_1_1 }; }
    finally {
        try {
            if (methods_1_1 && !methods_1_1.done && (_a = methods_1.return)) _a.call(methods_1);
        }
        finally { if (e_1) throw e_1.error; }
    }
    var properties = helper_mock_service_1.default.extractPropertiesFromPrototype(service);
    try {
        for (var properties_1 = __values(properties), properties_1_1 = properties_1.next(); !properties_1_1.done; properties_1_1 = properties_1.next()) {
            var property = properties_1_1.value;
            helper_mock_service_1.default.mock(value, property, 'get', mockName);
            helper_mock_service_1.default.mock(value, property, 'set', mockName);
        }
    }
    catch (e_2_1) { e_2 = { error: e_2_1 }; }
    finally {
        try {
            if (properties_1_1 && !properties_1_1.done && (_b = properties_1.return)) _b.call(properties_1);
        }
        finally { if (e_2) throw e_2.error; }
    }
    Object.setPrototypeOf(value, service);
    return value;
});
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaGVscGVyLmNyZWF0ZS1tb2NrLWZyb20tcHJvdG90eXBlLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vLi4vbGlicy9uZy1tb2Nrcy9zcmMvbGliL21vY2stc2VydmljZS9oZWxwZXIuY3JlYXRlLW1vY2stZnJvbS1wcm90b3R5cGUudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7OztBQUFBLDhFQUFzRDtBQUd0RCxtQkFBZSxVQUFDLE9BQVk7O0lBQzFCLElBQU0sUUFBUSxHQUFHLE9BQU8sQ0FBQyxXQUFXLENBQUMsSUFBSSxDQUFDO0lBQzFDLElBQU0sS0FBSyxHQUFRLEVBQUUsQ0FBQztJQUV0QixJQUFNLE9BQU8sR0FBRyw2QkFBaUIsQ0FBQywyQkFBMkIsQ0FBQyxPQUFPLENBQUMsQ0FBQzs7UUFDdkUsS0FBcUIsSUFBQSxZQUFBLFNBQUEsT0FBTyxDQUFBLGdDQUFBLHFEQUFFO1lBQXpCLElBQU0sTUFBTSxvQkFBQTtZQUNmLDZCQUFpQixDQUFDLElBQUksQ0FBQyxLQUFLLEVBQUUsTUFBTSxFQUFFLFFBQVEsQ0FBQyxDQUFDO1NBQ2pEOzs7Ozs7Ozs7SUFFRCxJQUFNLFVBQVUsR0FBRyw2QkFBaUIsQ0FBQyw4QkFBOEIsQ0FBQyxPQUFPLENBQUMsQ0FBQzs7UUFDN0UsS0FBdUIsSUFBQSxlQUFBLFNBQUEsVUFBVSxDQUFBLHNDQUFBLDhEQUFFO1lBQTlCLElBQU0sUUFBUSx1QkFBQTtZQUNqQiw2QkFBaUIsQ0FBQyxJQUFJLENBQUMsS0FBSyxFQUFFLFFBQVEsRUFBRSxLQUFLLEVBQUUsUUFBUSxDQUFDLENBQUM7WUFDekQsNkJBQWlCLENBQUMsSUFBSSxDQUFDLEtBQUssRUFBRSxRQUFRLEVBQUUsS0FBSyxFQUFFLFFBQVEsQ0FBQyxDQUFDO1NBQzFEOzs7Ozs7Ozs7SUFDRCxNQUFNLENBQUMsY0FBYyxDQUFDLEtBQUssRUFBRSxPQUFPLENBQUMsQ0FBQztJQUV0QyxPQUFPLEtBQUssQ0FBQztBQUNmLENBQUMsRUFBQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBoZWxwZXJNb2NrU2VydmljZSBmcm9tICcuL2hlbHBlci5tb2NrLXNlcnZpY2UnO1xuaW1wb3J0IHsgTW9ja2VkRnVuY3Rpb24gfSBmcm9tICcuL3R5cGVzJztcblxuZXhwb3J0IGRlZmF1bHQgKHNlcnZpY2U6IGFueSk6IHsgW2tleSBpbiBrZXlvZiBhbnldOiBNb2NrZWRGdW5jdGlvbiB9ID0+IHtcbiAgY29uc3QgbW9ja05hbWUgPSBzZXJ2aWNlLmNvbnN0cnVjdG9yLm5hbWU7XG4gIGNvbnN0IHZhbHVlOiBhbnkgPSB7fTtcblxuICBjb25zdCBtZXRob2RzID0gaGVscGVyTW9ja1NlcnZpY2UuZXh0cmFjdE1ldGhvZHNGcm9tUHJvdG90eXBlKHNlcnZpY2UpO1xuICBmb3IgKGNvbnN0IG1ldGhvZCBvZiBtZXRob2RzKSB7XG4gICAgaGVscGVyTW9ja1NlcnZpY2UubW9jayh2YWx1ZSwgbWV0aG9kLCBtb2NrTmFtZSk7XG4gIH1cblxuICBjb25zdCBwcm9wZXJ0aWVzID0gaGVscGVyTW9ja1NlcnZpY2UuZXh0cmFjdFByb3BlcnRpZXNGcm9tUHJvdG90eXBlKHNlcnZpY2UpO1xuICBmb3IgKGNvbnN0IHByb3BlcnR5IG9mIHByb3BlcnRpZXMpIHtcbiAgICBoZWxwZXJNb2NrU2VydmljZS5tb2NrKHZhbHVlLCBwcm9wZXJ0eSwgJ2dldCcsIG1vY2tOYW1lKTtcbiAgICBoZWxwZXJNb2NrU2VydmljZS5tb2NrKHZhbHVlLCBwcm9wZXJ0eSwgJ3NldCcsIG1vY2tOYW1lKTtcbiAgfVxuICBPYmplY3Quc2V0UHJvdG90eXBlT2YodmFsdWUsIHNlcnZpY2UpO1xuXG4gIHJldHVybiB2YWx1ZTtcbn07XG4iXX0=