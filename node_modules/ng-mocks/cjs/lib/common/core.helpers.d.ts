import { InjectionToken } from '@angular/core';
import { AnyType, Type } from './core.types';
export declare const getTestBedInjection: <I>(token: Type<I> | InjectionToken<I>) => I | undefined;
export declare const getInjection: <I>(token: Type<I> | InjectionToken<I>) => I;
export declare const flatten: <T>(values: T | T[], result?: T[]) => T[];
export declare const mapKeys: <T>(set: Map<T, any>) => T[];
export declare const mapValues: <T>(set: {
    forEach(a1: (value: T) => void): void;
}) => T[];
export declare const mapEntries: <K, T>(set: Map<K, T>) => [K, T][];
export declare const extractDependency: (deps: any[], set?: Set<any> | undefined) => void;
export declare const extendClass: <I extends object>(base: AnyType<I>) => Type<I>;
