"use strict";
// tslint:disable variable-name ban-ts-ignore
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
exports.LegacyControlValueAccessor = void 0;
var mock_1 = require("./mock");
/**
 * @deprecated use isMockControlValueAccessor or isMockValidator instead (removing in A13)
 * @see https://ng-mocks.sudo.eu/api/helpers/isMockControlValueAccessor
 * @see https://ng-mocks.sudo.eu/api/helpers/isMockValidator
 */
var LegacyControlValueAccessor = /** @class */ (function (_super) {
    __extends(LegacyControlValueAccessor, _super);
    function LegacyControlValueAccessor() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    // istanbul ignore next
    LegacyControlValueAccessor.prototype.__simulateChange = function () {
        // nothing to do.
    };
    // istanbul ignore next
    /**
     * @deprecated use isMockControlValueAccessor instead (removing in A13)
     * @see https://ng-mocks.sudo.eu/api/helpers/isMockControlValueAccessor
     */
    LegacyControlValueAccessor.prototype.__simulateTouch = function () {
        // nothing to do.
    };
    // istanbul ignore next
    /**
     * @deprecated use isMockValidator instead (removing in A13)
     * @see https://ng-mocks.sudo.eu/api/helpers/isMockValidator
     */
    LegacyControlValueAccessor.prototype.__simulateValidatorChange = function () {
        // nothing to do.
    };
    return LegacyControlValueAccessor;
}(mock_1.Mock));
exports.LegacyControlValueAccessor = LegacyControlValueAccessor;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibW9jay1jb250cm9sLXZhbHVlLWFjY2Vzc29yLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vLi4vbGlicy9uZy1tb2Nrcy9zcmMvbGliL2NvbW1vbi9tb2NrLWNvbnRyb2wtdmFsdWUtYWNjZXNzb3IudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQUFBLDZDQUE2Qzs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBRTdDLCtCQUE4QjtBQUU5Qjs7OztHQUlHO0FBQ0g7SUFBZ0QsOENBQUk7SUFBcEQ7O0lBNEJBLENBQUM7SUF0QkMsdUJBQXVCO0lBQ2hCLHFEQUFnQixHQUF2QjtRQUNFLGlCQUFpQjtJQUNuQixDQUFDO0lBRUQsdUJBQXVCO0lBQ3ZCOzs7T0FHRztJQUNJLG9EQUFlLEdBQXRCO1FBQ0UsaUJBQWlCO0lBQ25CLENBQUM7SUFFRCx1QkFBdUI7SUFDdkI7OztPQUdHO0lBQ0ksOERBQXlCLEdBQWhDO1FBQ0UsaUJBQWlCO0lBQ25CLENBQUM7SUFDSCxpQ0FBQztBQUFELENBQUMsQUE1QkQsQ0FBZ0QsV0FBSSxHQTRCbkQ7QUE1QlksZ0VBQTBCIiwic291cmNlc0NvbnRlbnQiOlsiLy8gdHNsaW50OmRpc2FibGUgdmFyaWFibGUtbmFtZSBiYW4tdHMtaWdub3JlXG5cbmltcG9ydCB7IE1vY2sgfSBmcm9tICcuL21vY2snO1xuXG4vKipcbiAqIEBkZXByZWNhdGVkIHVzZSBpc01vY2tDb250cm9sVmFsdWVBY2Nlc3NvciBvciBpc01vY2tWYWxpZGF0b3IgaW5zdGVhZCAocmVtb3ZpbmcgaW4gQTEzKVxuICogQHNlZSBodHRwczovL25nLW1vY2tzLnN1ZG8uZXUvYXBpL2hlbHBlcnMvaXNNb2NrQ29udHJvbFZhbHVlQWNjZXNzb3JcbiAqIEBzZWUgaHR0cHM6Ly9uZy1tb2Nrcy5zdWRvLmV1L2FwaS9oZWxwZXJzL2lzTW9ja1ZhbGlkYXRvclxuICovXG5leHBvcnQgY2xhc3MgTGVnYWN5Q29udHJvbFZhbHVlQWNjZXNzb3IgZXh0ZW5kcyBNb2NrIHtcbiAgLyoqXG4gICAqIEBkZXByZWNhdGVkIHVzZSBpc01vY2tDb250cm9sVmFsdWVBY2Nlc3NvciBpbnN0ZWFkIChyZW1vdmluZyBpbiBBMTMpXG4gICAqIEBzZWUgaHR0cHM6Ly9uZy1tb2Nrcy5zdWRvLmV1L2FwaS9oZWxwZXJzL2lzTW9ja0NvbnRyb2xWYWx1ZUFjY2Vzc29yXG4gICAqL1xuICBwdWJsaWMgX19zaW11bGF0ZUNoYW5nZSh2YWx1ZTogYW55KTogdm9pZDtcbiAgLy8gaXN0YW5idWwgaWdub3JlIG5leHRcbiAgcHVibGljIF9fc2ltdWxhdGVDaGFuZ2UoKSB7XG4gICAgLy8gbm90aGluZyB0byBkby5cbiAgfVxuXG4gIC8vIGlzdGFuYnVsIGlnbm9yZSBuZXh0XG4gIC8qKlxuICAgKiBAZGVwcmVjYXRlZCB1c2UgaXNNb2NrQ29udHJvbFZhbHVlQWNjZXNzb3IgaW5zdGVhZCAocmVtb3ZpbmcgaW4gQTEzKVxuICAgKiBAc2VlIGh0dHBzOi8vbmctbW9ja3Muc3Vkby5ldS9hcGkvaGVscGVycy9pc01vY2tDb250cm9sVmFsdWVBY2Nlc3NvclxuICAgKi9cbiAgcHVibGljIF9fc2ltdWxhdGVUb3VjaCgpIHtcbiAgICAvLyBub3RoaW5nIHRvIGRvLlxuICB9XG5cbiAgLy8gaXN0YW5idWwgaWdub3JlIG5leHRcbiAgLyoqXG4gICAqIEBkZXByZWNhdGVkIHVzZSBpc01vY2tWYWxpZGF0b3IgaW5zdGVhZCAocmVtb3ZpbmcgaW4gQTEzKVxuICAgKiBAc2VlIGh0dHBzOi8vbmctbW9ja3Muc3Vkby5ldS9hcGkvaGVscGVycy9pc01vY2tWYWxpZGF0b3JcbiAgICovXG4gIHB1YmxpYyBfX3NpbXVsYXRlVmFsaWRhdG9yQ2hhbmdlKCkge1xuICAgIC8vIG5vdGhpbmcgdG8gZG8uXG4gIH1cbn1cblxuLyoqXG4gKiBAc2VlIGh0dHBzOi8vbmctbW9ja3Muc3Vkby5ldS9hcGkvaGVscGVycy9pc01vY2tDb250cm9sVmFsdWVBY2Nlc3NvclxuICovXG5leHBvcnQgaW50ZXJmYWNlIE1vY2tDb250cm9sVmFsdWVBY2Nlc3NvciB7XG4gIC8qKlxuICAgKiBAc2VlIGh0dHBzOi8vbmctbW9ja3Muc3Vkby5ldS9leHRyYS9tb2NrLWZvcm0tY29udHJvbHNcbiAgICovXG4gIF9fc2ltdWxhdGVDaGFuZ2UodmFsdWU6IGFueSk6IHZvaWQ7XG5cbiAgLyoqXG4gICAqIEBzZWUgaHR0cHM6Ly9uZy1tb2Nrcy5zdWRvLmV1L2V4dHJhL21vY2stZm9ybS1jb250cm9sc1xuICAgKi9cbiAgX19zaW11bGF0ZVRvdWNoKCk6IHZvaWQ7XG59XG5cbi8qKlxuICogQHNlZSBodHRwczovL25nLW1vY2tzLnN1ZG8uZXUvYXBpL2hlbHBlcnMvaXNNb2NrVmFsaWRhdG9yXG4gKi9cbmV4cG9ydCBpbnRlcmZhY2UgTW9ja1ZhbGlkYXRvciB7XG4gIC8qKlxuICAgKiBAc2VlIGh0dHBzOi8vbmctbW9ja3Muc3Vkby5ldS9leHRyYS9tb2NrLWZvcm0tY29udHJvbHNcbiAgICovXG4gIF9fc2ltdWxhdGVWYWxpZGF0b3JDaGFuZ2UoKTogdm9pZDtcbn1cbiJdfQ==