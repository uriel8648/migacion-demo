import { PipeTransform } from '@angular/core';
import { MockedComponent } from '../mock-component/types';
import { MockedDirective } from '../mock-directive/types';
import { MockedModule } from '../mock-module/types';
import { MockedPipe } from '../mock-pipe/types';
import { Type } from './core.types';
/**
 * Checks whether the declaration is a mock one and derives from the specified module.
 *
 * @see https://ng-mocks.sudo.eu/api/helpers/isMockedNgDefOf
 */
export declare function isMockedNgDefOf<T>(declaration: any, type: Type<T>, ngType: 'm'): declaration is Type<MockedModule<T>>;
/**
 * Checks whether the declaration is a mock one and derives from the specified component.
 *
 * @see https://ng-mocks.sudo.eu/api/helpers/isMockedNgDefOf
 */
export declare function isMockedNgDefOf<T>(declaration: any, type: Type<T>, ngType: 'c'): declaration is Type<MockedComponent<T>>;
/**
 * Checks whether the declaration is a mock one and derives from the specified directive.
 *
 * @see https://ng-mocks.sudo.eu/api/helpers/isMockedNgDefOf
 */
export declare function isMockedNgDefOf<T>(declaration: any, type: Type<T>, ngType: 'd'): declaration is Type<MockedDirective<T>>;
/**
 * Checks whether the declaration is a mock one and derives from the specified pipe.
 *
 * @see https://ng-mocks.sudo.eu/api/helpers/isMockedNgDefOf
 */
export declare function isMockedNgDefOf<T extends PipeTransform>(declaration: any, type: Type<T>, ngType: 'p'): declaration is Type<MockedPipe<T>>;
/**
 * Checks whether the declaration is a mock one and derives from the specified type.
 *
 * @see https://ng-mocks.sudo.eu/api/helpers/isMockedNgDefOf
 */
export declare function isMockedNgDefOf<T>(declaration: any, type: Type<T>): declaration is Type<T>;
