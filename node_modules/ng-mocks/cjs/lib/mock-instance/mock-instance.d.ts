import { InjectionToken, Injector } from '@angular/core';
import { AbstractType, Type } from '../common/core.types';
export interface MockInstance {
    /**
     * Creates a bucket which remembers all future changes.
     *
     * @see https://ng-mocks.sudo.eu/api/MockInstance#remember
     */
    remember(): void;
    /**
     * Resets all changes for current bucket.
     *
     * @see https://ng-mocks.sudo.eu/api/MockInstance#restore
     */
    restore(): void;
    /**
     * Creates a local scope in `beforeAll` and `afterAll`.
     * If `each` has been passed, then `beforeEach` and `afterEach` are used.
     *
     * @see https://ng-mocks.sudo.eu/api/MockInstance#scope
     */
    scope(scope?: 'all'): void;
}
/**
 * @see https://ng-mocks.sudo.eu/api/MockInstance
 */
export declare function MockInstance<T extends object, K extends keyof T, S extends () => T[K]>(instance: Type<T> | AbstractType<T>, name: K, stub: S, encapsulation: 'get'): S;
/**
 * @see https://ng-mocks.sudo.eu/api/MockInstance
 */
export declare function MockInstance<T extends object, K extends keyof T, S extends (value: T[K]) => void>(instance: Type<T> | AbstractType<T>, name: K, stub: S, encapsulation: 'set'): S;
/**
 * @see https://ng-mocks.sudo.eu/api/MockInstance
 */
export declare function MockInstance<T extends object, K extends keyof T, S extends T[K]>(instance: Type<T> | AbstractType<T>, name: K, stub: S): S;
/**
 * @see https://ng-mocks.sudo.eu/api/MockInstance
 */
export declare function MockInstance<T>(declaration: InjectionToken<T>, init?: (instance: T | undefined, injector: Injector | undefined) => Partial<T>): void;
/**
 * @see https://ng-mocks.sudo.eu/api/MockInstance
 */
export declare function MockInstance<T>(declaration: InjectionToken<T>, config?: {
    init?: (instance: T | undefined, injector: Injector | undefined) => Partial<T>;
}): void;
/**
 * @see https://ng-mocks.sudo.eu/api/MockInstance
 */
export declare function MockInstance<T>(declaration: Type<T> | AbstractType<T>, init?: (instance: T, injector: Injector | undefined) => void | Partial<T>): void;
/**
 * @see https://ng-mocks.sudo.eu/api/MockInstance
 */
export declare function MockInstance<T>(declaration: Type<T> | AbstractType<T>, config?: {
    init?: (instance: T, injector: Injector | undefined) => void | Partial<T>;
}): void;
export declare namespace MockInstance {
    var remember: () => void;
    var restore: () => void;
    var scope: (scope?: "all" | "suite" | "case") => void;
}
export declare function MockReset(): void;
