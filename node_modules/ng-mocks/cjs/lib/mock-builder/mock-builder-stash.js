"use strict";
var __values = (this && this.__values) || function(o) {
    var s = typeof Symbol === "function" && Symbol.iterator, m = s && o[s], i = 0;
    if (m) return m.call(o);
    if (o && typeof o.length === "number") return {
        next: function () {
            if (o && i >= o.length) o = void 0;
            return { value: o && o[i++], done: !o };
        }
    };
    throw new TypeError(s ? "Object is not iterable." : "Symbol.iterator is not defined.");
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.MockBuilderStash = void 0;
var core_config_1 = __importDefault(require("../common/core.config"));
var ng_mocks_universe_1 = __importDefault(require("../common/ng-mocks-universe"));
var MockBuilderStash = /** @class */ (function () {
    function MockBuilderStash() {
        this.data = {};
    }
    MockBuilderStash.prototype.backup = function () {
        this.data = {
            builtDeclarations: ng_mocks_universe_1.default.builtDeclarations,
            builtProviders: ng_mocks_universe_1.default.builtProviders,
            cacheDeclarations: ng_mocks_universe_1.default.cacheDeclarations,
            cacheProviders: ng_mocks_universe_1.default.cacheProviders,
            config: ng_mocks_universe_1.default.config,
            configInstance: ng_mocks_universe_1.default.configInstance,
            flags: ng_mocks_universe_1.default.flags,
            touches: ng_mocks_universe_1.default.touches,
        };
        ng_mocks_universe_1.default.builtDeclarations = new Map();
        ng_mocks_universe_1.default.builtProviders = new Map();
        ng_mocks_universe_1.default.cacheDeclarations = new Map();
        ng_mocks_universe_1.default.cacheProviders = new Map();
        ng_mocks_universe_1.default.config = new Map();
        ng_mocks_universe_1.default.configInstance = new Map();
        ng_mocks_universe_1.default.flags = new Set(core_config_1.default.flags);
        ng_mocks_universe_1.default.touches = new Set();
    };
    MockBuilderStash.prototype.restore = function () {
        var e_1, _a;
        try {
            for (var _b = __values(Object.keys(this.data)), _c = _b.next(); !_c.done; _c = _b.next()) {
                var key = _c.value;
                ng_mocks_universe_1.default[key] = this.data[key];
            }
        }
        catch (e_1_1) { e_1 = { error: e_1_1 }; }
        finally {
            try {
                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
            }
            finally { if (e_1) throw e_1.error; }
        }
    };
    return MockBuilderStash;
}());
exports.MockBuilderStash = MockBuilderStash;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibW9jay1idWlsZGVyLXN0YXNoLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vLi4vbGlicy9uZy1tb2Nrcy9zcmMvbGliL21vY2stYnVpbGRlci9tb2NrLWJ1aWxkZXItc3Rhc2gudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFBQSxzRUFBK0M7QUFDL0Msa0ZBQTBEO0FBRTFEO0lBQUE7UUFDWSxTQUFJLEdBQTJCLEVBQUUsQ0FBQztJQTZCOUMsQ0FBQztJQTNCUSxpQ0FBTSxHQUFiO1FBQ0UsSUFBSSxDQUFDLElBQUksR0FBRztZQUNWLGlCQUFpQixFQUFFLDJCQUFlLENBQUMsaUJBQWlCO1lBQ3BELGNBQWMsRUFBRSwyQkFBZSxDQUFDLGNBQWM7WUFDOUMsaUJBQWlCLEVBQUUsMkJBQWUsQ0FBQyxpQkFBaUI7WUFDcEQsY0FBYyxFQUFFLDJCQUFlLENBQUMsY0FBYztZQUM5QyxNQUFNLEVBQUUsMkJBQWUsQ0FBQyxNQUFNO1lBQzlCLGNBQWMsRUFBRSwyQkFBZSxDQUFDLGNBQWM7WUFDOUMsS0FBSyxFQUFFLDJCQUFlLENBQUMsS0FBSztZQUM1QixPQUFPLEVBQUUsMkJBQWUsQ0FBQyxPQUFPO1NBQ2pDLENBQUM7UUFFRiwyQkFBZSxDQUFDLGlCQUFpQixHQUFHLElBQUksR0FBRyxFQUFFLENBQUM7UUFDOUMsMkJBQWUsQ0FBQyxjQUFjLEdBQUcsSUFBSSxHQUFHLEVBQUUsQ0FBQztRQUMzQywyQkFBZSxDQUFDLGlCQUFpQixHQUFHLElBQUksR0FBRyxFQUFFLENBQUM7UUFDOUMsMkJBQWUsQ0FBQyxjQUFjLEdBQUcsSUFBSSxHQUFHLEVBQUUsQ0FBQztRQUMzQywyQkFBZSxDQUFDLE1BQU0sR0FBRyxJQUFJLEdBQUcsRUFBRSxDQUFDO1FBQ25DLDJCQUFlLENBQUMsY0FBYyxHQUFHLElBQUksR0FBRyxFQUFFLENBQUM7UUFDM0MsMkJBQWUsQ0FBQyxLQUFLLEdBQUcsSUFBSSxHQUFHLENBQUMscUJBQVUsQ0FBQyxLQUFLLENBQUMsQ0FBQztRQUNsRCwyQkFBZSxDQUFDLE9BQU8sR0FBRyxJQUFJLEdBQUcsRUFBRSxDQUFDO0lBQ3RDLENBQUM7SUFFTSxrQ0FBTyxHQUFkOzs7WUFDRSxLQUFrQixJQUFBLEtBQUEsU0FBQSxNQUFNLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsQ0FBQSxnQkFBQSw0QkFBRTtnQkFBckMsSUFBTSxHQUFHLFdBQUE7Z0JBQ1gsMkJBQXVCLENBQUMsR0FBRyxDQUFDLEdBQUksSUFBSSxDQUFDLElBQVksQ0FBQyxHQUFHLENBQUMsQ0FBQzthQUN6RDs7Ozs7Ozs7O0lBQ0gsQ0FBQztJQUNILHVCQUFDO0FBQUQsQ0FBQyxBQTlCRCxJQThCQztBQTlCWSw0Q0FBZ0IiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgY29yZUNvbmZpZyBmcm9tICcuLi9jb21tb24vY29yZS5jb25maWcnO1xuaW1wb3J0IG5nTW9ja3NVbml2ZXJzZSBmcm9tICcuLi9jb21tb24vbmctbW9ja3MtdW5pdmVyc2UnO1xuXG5leHBvcnQgY2xhc3MgTW9ja0J1aWxkZXJTdGFzaCB7XG4gIHByb3RlY3RlZCBkYXRhOiBSZWNvcmQ8a2V5b2YgYW55LCBhbnk+ID0ge307XG5cbiAgcHVibGljIGJhY2t1cCgpOiB2b2lkIHtcbiAgICB0aGlzLmRhdGEgPSB7XG4gICAgICBidWlsdERlY2xhcmF0aW9uczogbmdNb2Nrc1VuaXZlcnNlLmJ1aWx0RGVjbGFyYXRpb25zLFxuICAgICAgYnVpbHRQcm92aWRlcnM6IG5nTW9ja3NVbml2ZXJzZS5idWlsdFByb3ZpZGVycyxcbiAgICAgIGNhY2hlRGVjbGFyYXRpb25zOiBuZ01vY2tzVW5pdmVyc2UuY2FjaGVEZWNsYXJhdGlvbnMsXG4gICAgICBjYWNoZVByb3ZpZGVyczogbmdNb2Nrc1VuaXZlcnNlLmNhY2hlUHJvdmlkZXJzLFxuICAgICAgY29uZmlnOiBuZ01vY2tzVW5pdmVyc2UuY29uZmlnLFxuICAgICAgY29uZmlnSW5zdGFuY2U6IG5nTW9ja3NVbml2ZXJzZS5jb25maWdJbnN0YW5jZSxcbiAgICAgIGZsYWdzOiBuZ01vY2tzVW5pdmVyc2UuZmxhZ3MsXG4gICAgICB0b3VjaGVzOiBuZ01vY2tzVW5pdmVyc2UudG91Y2hlcyxcbiAgICB9O1xuXG4gICAgbmdNb2Nrc1VuaXZlcnNlLmJ1aWx0RGVjbGFyYXRpb25zID0gbmV3IE1hcCgpO1xuICAgIG5nTW9ja3NVbml2ZXJzZS5idWlsdFByb3ZpZGVycyA9IG5ldyBNYXAoKTtcbiAgICBuZ01vY2tzVW5pdmVyc2UuY2FjaGVEZWNsYXJhdGlvbnMgPSBuZXcgTWFwKCk7XG4gICAgbmdNb2Nrc1VuaXZlcnNlLmNhY2hlUHJvdmlkZXJzID0gbmV3IE1hcCgpO1xuICAgIG5nTW9ja3NVbml2ZXJzZS5jb25maWcgPSBuZXcgTWFwKCk7XG4gICAgbmdNb2Nrc1VuaXZlcnNlLmNvbmZpZ0luc3RhbmNlID0gbmV3IE1hcCgpO1xuICAgIG5nTW9ja3NVbml2ZXJzZS5mbGFncyA9IG5ldyBTZXQoY29yZUNvbmZpZy5mbGFncyk7XG4gICAgbmdNb2Nrc1VuaXZlcnNlLnRvdWNoZXMgPSBuZXcgU2V0KCk7XG4gIH1cblxuICBwdWJsaWMgcmVzdG9yZSgpOiB2b2lkIHtcbiAgICBmb3IgKGNvbnN0IGtleSBvZiBPYmplY3Qua2V5cyh0aGlzLmRhdGEpKSB7XG4gICAgICAobmdNb2Nrc1VuaXZlcnNlIGFzIGFueSlba2V5XSA9ICh0aGlzLmRhdGEgYXMgYW55KVtrZXldO1xuICAgIH1cbiAgfVxufVxuIl19