"use strict";
var __values = (this && this.__values) || function(o) {
    var s = typeof Symbol === "function" && Symbol.iterator, m = s && o[s], i = 0;
    if (m) return m.call(o);
    if (o && typeof o.length === "number") return {
        next: function () {
            if (o && i >= o.length) o = void 0;
            return { value: o && o[i++], done: !o };
        }
    };
    throw new TypeError(s ? "Object is not iterable." : "Symbol.iterator is not defined.");
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.MockBuilder = void 0;
var core_helpers_1 = require("../common/core.helpers");
var mock_builder_performance_1 = require("./mock-builder.performance");
/**
 * @see https://ng-mocks.sudo.eu/api/MockBuilder
 */
function MockBuilder(keepDeclaration, itsModuleToMock) {
    var e_1, _a, e_2, _b;
    var instance = new mock_builder_performance_1.MockBuilderPerformance();
    if (keepDeclaration) {
        try {
            for (var _c = __values((0, core_helpers_1.flatten)(keepDeclaration)), _d = _c.next(); !_d.done; _d = _c.next()) {
                var declaration = _d.value;
                instance.keep(declaration, {
                    export: true,
                });
            }
        }
        catch (e_1_1) { e_1 = { error: e_1_1 }; }
        finally {
            try {
                if (_d && !_d.done && (_a = _c.return)) _a.call(_c);
            }
            finally { if (e_1) throw e_1.error; }
        }
    }
    if (itsModuleToMock) {
        try {
            for (var _e = __values((0, core_helpers_1.flatten)(itsModuleToMock)), _f = _e.next(); !_f.done; _f = _e.next()) {
                var declaration = _f.value;
                instance.mock(declaration, declaration, {
                    export: true,
                    exportAll: true,
                });
            }
        }
        catch (e_2_1) { e_2 = { error: e_2_1 }; }
        finally {
            try {
                if (_f && !_f.done && (_b = _e.return)) _b.call(_e);
            }
            finally { if (e_2) throw e_2.error; }
        }
    }
    return instance;
}
exports.MockBuilder = MockBuilder;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibW9jay1idWlsZGVyLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vLi4vbGlicy9uZy1tb2Nrcy9zcmMvbGliL21vY2stYnVpbGRlci9tb2NrLWJ1aWxkZXIudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7QUFFQSx1REFBaUQ7QUFJakQsdUVBQW9FO0FBS3BFOztHQUVHO0FBQ0gsU0FBZ0IsV0FBVyxDQUN6QixlQUEwRSxFQUMxRSxlQUEwRTs7SUFFMUUsSUFBTSxRQUFRLEdBQUcsSUFBSSxpREFBc0IsRUFBRSxDQUFDO0lBRTlDLElBQUksZUFBZSxFQUFFOztZQUNuQixLQUEwQixJQUFBLEtBQUEsU0FBQSxJQUFBLHNCQUFPLEVBQUMsZUFBZSxDQUFDLENBQUEsZ0JBQUEsNEJBQUU7Z0JBQS9DLElBQU0sV0FBVyxXQUFBO2dCQUNwQixRQUFRLENBQUMsSUFBSSxDQUFDLFdBQVcsRUFBRTtvQkFDekIsTUFBTSxFQUFFLElBQUk7aUJBQ2IsQ0FBQyxDQUFDO2FBQ0o7Ozs7Ozs7OztLQUNGO0lBQ0QsSUFBSSxlQUFlLEVBQUU7O1lBQ25CLEtBQTBCLElBQUEsS0FBQSxTQUFBLElBQUEsc0JBQU8sRUFBQyxlQUFlLENBQUMsQ0FBQSxnQkFBQSw0QkFBRTtnQkFBL0MsSUFBTSxXQUFXLFdBQUE7Z0JBQ3BCLFFBQVEsQ0FBQyxJQUFJLENBQUMsV0FBVyxFQUFFLFdBQVcsRUFBRTtvQkFDdEMsTUFBTSxFQUFFLElBQUk7b0JBQ1osU0FBUyxFQUFFLElBQUk7aUJBQ2hCLENBQUMsQ0FBQzthQUNKOzs7Ozs7Ozs7S0FDRjtJQUVELE9BQU8sUUFBUSxDQUFDO0FBQ2xCLENBQUM7QUF2QkQsa0NBdUJDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgSW5qZWN0aW9uVG9rZW4gfSBmcm9tICdAYW5ndWxhci9jb3JlJztcblxuaW1wb3J0IHsgZmxhdHRlbiB9IGZyb20gJy4uL2NvbW1vbi9jb3JlLmhlbHBlcnMnO1xuaW1wb3J0IHsgQW55VHlwZSB9IGZyb20gJy4uL2NvbW1vbi9jb3JlLnR5cGVzJztcbmltcG9ydCB7IE5nTW9kdWxlV2l0aFByb3ZpZGVycyB9IGZyb20gJy4uL2NvbW1vbi9mdW5jLmlzLW5nLW1vZHVsZS1kZWYtd2l0aC1wcm92aWRlcnMnO1xuXG5pbXBvcnQgeyBNb2NrQnVpbGRlclBlcmZvcm1hbmNlIH0gZnJvbSAnLi9tb2NrLWJ1aWxkZXIucGVyZm9ybWFuY2UnO1xuaW1wb3J0IHsgSU1vY2tCdWlsZGVyIH0gZnJvbSAnLi90eXBlcyc7XG5cbmV4cG9ydCB0eXBlIE1vY2tCdWlsZGVyUGFyYW0gPSBzdHJpbmcgfCBBbnlUeXBlPGFueT4gfCBJbmplY3Rpb25Ub2tlbjxhbnk+IHwgTmdNb2R1bGVXaXRoUHJvdmlkZXJzO1xuXG4vKipcbiAqIEBzZWUgaHR0cHM6Ly9uZy1tb2Nrcy5zdWRvLmV1L2FwaS9Nb2NrQnVpbGRlclxuICovXG5leHBvcnQgZnVuY3Rpb24gTW9ja0J1aWxkZXIoXG4gIGtlZXBEZWNsYXJhdGlvbj86IE1vY2tCdWlsZGVyUGFyYW0gfCBNb2NrQnVpbGRlclBhcmFtW10gfCBudWxsIHwgdW5kZWZpbmVkLFxuICBpdHNNb2R1bGVUb01vY2s/OiBNb2NrQnVpbGRlclBhcmFtIHwgTW9ja0J1aWxkZXJQYXJhbVtdIHwgbnVsbCB8IHVuZGVmaW5lZCxcbik6IElNb2NrQnVpbGRlciB7XG4gIGNvbnN0IGluc3RhbmNlID0gbmV3IE1vY2tCdWlsZGVyUGVyZm9ybWFuY2UoKTtcblxuICBpZiAoa2VlcERlY2xhcmF0aW9uKSB7XG4gICAgZm9yIChjb25zdCBkZWNsYXJhdGlvbiBvZiBmbGF0dGVuKGtlZXBEZWNsYXJhdGlvbikpIHtcbiAgICAgIGluc3RhbmNlLmtlZXAoZGVjbGFyYXRpb24sIHtcbiAgICAgICAgZXhwb3J0OiB0cnVlLFxuICAgICAgfSk7XG4gICAgfVxuICB9XG4gIGlmIChpdHNNb2R1bGVUb01vY2spIHtcbiAgICBmb3IgKGNvbnN0IGRlY2xhcmF0aW9uIG9mIGZsYXR0ZW4oaXRzTW9kdWxlVG9Nb2NrKSkge1xuICAgICAgaW5zdGFuY2UubW9jayhkZWNsYXJhdGlvbiwgZGVjbGFyYXRpb24sIHtcbiAgICAgICAgZXhwb3J0OiB0cnVlLFxuICAgICAgICBleHBvcnRBbGw6IHRydWUsXG4gICAgICB9KTtcbiAgICB9XG4gIH1cblxuICByZXR1cm4gaW5zdGFuY2U7XG59XG4iXX0=