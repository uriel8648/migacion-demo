"use strict";
var __values = (this && this.__values) || function(o) {
    var s = typeof Symbol === "function" && Symbol.iterator, m = s && o[s], i = 0;
    if (m) return m.call(o);
    if (o && typeof o.length === "number") return {
        next: function () {
            if (o && i >= o.length) o = void 0;
            return { value: o && o[i++], done: !o };
        }
    };
    throw new TypeError(s ? "Object is not iterable." : "Symbol.iterator is not defined.");
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
var equal_render_defs_1 = __importDefault(require("./equal-render-defs"));
var objectsDiffer = function (destination, source) {
    var e_1, _a;
    if (Object.keys(destination).length !== Object.keys(source).length) {
        return true;
    }
    try {
        for (var _b = __values(Object.keys(destination)), _c = _b.next(); !_c.done; _c = _b.next()) {
            var key = _c.value;
            if (!(0, equal_render_defs_1.default)(destination[key], source[key])) {
                return true;
            }
        }
    }
    catch (e_1_1) { e_1 = { error: e_1_1 }; }
    finally {
        try {
            if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
        }
        finally { if (e_1) throw e_1.error; }
    }
    return false;
};
exports.default = (function (source, destination) {
    if (!(0, equal_render_defs_1.default)(destination, source)) {
        return false;
    }
    if (typeof destination !== 'object' || typeof source !== 'object') {
        return true;
    }
    if (objectsDiffer(destination, source)) {
        return false;
    }
    return true;
});
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZXF1YWwtcmVuZGVyLWNvbmZpZ3MuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi8uLi8uLi9saWJzL25nLW1vY2tzL3NyYy9saWIvbW9jay1idWlsZGVyL3BlcmZvcm1hbmNlL2VxdWFsLXJlbmRlci1jb25maWdzLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7QUFBQSwwRUFBa0Q7QUFFbEQsSUFBTSxhQUFhLEdBQUcsVUFBQyxXQUFnQixFQUFFLE1BQVc7O0lBQ2xELElBQUksTUFBTSxDQUFDLElBQUksQ0FBQyxXQUFXLENBQUMsQ0FBQyxNQUFNLEtBQUssTUFBTSxDQUFDLElBQUksQ0FBQyxNQUFNLENBQUMsQ0FBQyxNQUFNLEVBQUU7UUFDbEUsT0FBTyxJQUFJLENBQUM7S0FDYjs7UUFDRCxLQUFrQixJQUFBLEtBQUEsU0FBQSxNQUFNLENBQUMsSUFBSSxDQUFDLFdBQVcsQ0FBQyxDQUFBLGdCQUFBLDRCQUFFO1lBQXZDLElBQU0sR0FBRyxXQUFBO1lBQ1osSUFBSSxDQUFDLElBQUEsMkJBQWUsRUFBQyxXQUFXLENBQUMsR0FBRyxDQUFDLEVBQUUsTUFBTSxDQUFDLEdBQUcsQ0FBQyxDQUFDLEVBQUU7Z0JBQ25ELE9BQU8sSUFBSSxDQUFDO2FBQ2I7U0FDRjs7Ozs7Ozs7O0lBRUQsT0FBTyxLQUFLLENBQUM7QUFDZixDQUFDLENBQUM7QUFFRixtQkFBZSxVQUFDLE1BQVcsRUFBRSxXQUFnQjtJQUMzQyxJQUFJLENBQUMsSUFBQSwyQkFBZSxFQUFDLFdBQVcsRUFBRSxNQUFNLENBQUMsRUFBRTtRQUN6QyxPQUFPLEtBQUssQ0FBQztLQUNkO0lBQ0QsSUFBSSxPQUFPLFdBQVcsS0FBSyxRQUFRLElBQUksT0FBTyxNQUFNLEtBQUssUUFBUSxFQUFFO1FBQ2pFLE9BQU8sSUFBSSxDQUFDO0tBQ2I7SUFDRCxJQUFJLGFBQWEsQ0FBQyxXQUFXLEVBQUUsTUFBTSxDQUFDLEVBQUU7UUFDdEMsT0FBTyxLQUFLLENBQUM7S0FDZDtJQUVELE9BQU8sSUFBSSxDQUFDO0FBQ2QsQ0FBQyxFQUFDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IGVxdWFsUmVuZGVyRGVmcyBmcm9tICcuL2VxdWFsLXJlbmRlci1kZWZzJztcblxuY29uc3Qgb2JqZWN0c0RpZmZlciA9IChkZXN0aW5hdGlvbjogYW55LCBzb3VyY2U6IGFueSk6IGJvb2xlYW4gPT4ge1xuICBpZiAoT2JqZWN0LmtleXMoZGVzdGluYXRpb24pLmxlbmd0aCAhPT0gT2JqZWN0LmtleXMoc291cmNlKS5sZW5ndGgpIHtcbiAgICByZXR1cm4gdHJ1ZTtcbiAgfVxuICBmb3IgKGNvbnN0IGtleSBvZiBPYmplY3Qua2V5cyhkZXN0aW5hdGlvbikpIHtcbiAgICBpZiAoIWVxdWFsUmVuZGVyRGVmcyhkZXN0aW5hdGlvbltrZXldLCBzb3VyY2Vba2V5XSkpIHtcbiAgICAgIHJldHVybiB0cnVlO1xuICAgIH1cbiAgfVxuXG4gIHJldHVybiBmYWxzZTtcbn07XG5cbmV4cG9ydCBkZWZhdWx0IChzb3VyY2U6IGFueSwgZGVzdGluYXRpb246IGFueSk6IGJvb2xlYW4gPT4ge1xuICBpZiAoIWVxdWFsUmVuZGVyRGVmcyhkZXN0aW5hdGlvbiwgc291cmNlKSkge1xuICAgIHJldHVybiBmYWxzZTtcbiAgfVxuICBpZiAodHlwZW9mIGRlc3RpbmF0aW9uICE9PSAnb2JqZWN0JyB8fCB0eXBlb2Ygc291cmNlICE9PSAnb2JqZWN0Jykge1xuICAgIHJldHVybiB0cnVlO1xuICB9XG4gIGlmIChvYmplY3RzRGlmZmVyKGRlc3RpbmF0aW9uLCBzb3VyY2UpKSB7XG4gICAgcmV0dXJuIGZhbHNlO1xuICB9XG5cbiAgcmV0dXJuIHRydWU7XG59O1xuIl19