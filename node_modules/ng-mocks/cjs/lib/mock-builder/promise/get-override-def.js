"use strict";
var __read = (this && this.__read) || function (o, n) {
    var m = typeof Symbol === "function" && o[Symbol.iterator];
    if (!m) return o;
    var i = m.call(o), r, ar = [], e;
    try {
        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);
    }
    catch (error) { e = { error: error }; }
    finally {
        try {
            if (r && !r.done && (m = i["return"])) m.call(i);
        }
        finally { if (e) throw e.error; }
    }
    return ar;
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
var ng_mocks_universe_1 = __importDefault(require("../../common/ng-mocks-universe"));
var mock_ng_def_1 = __importDefault(require("../../mock-module/mock-ng-def"));
exports.default = (function (meta) {
    if (!meta) {
        return undefined;
    }
    var skipMock = ng_mocks_universe_1.default.flags.has('skipMock');
    // istanbul ignore else
    if (!skipMock) {
        ng_mocks_universe_1.default.flags.add('skipMock');
    }
    var _a = __read((0, mock_ng_def_1.default)(meta), 2), changed = _a[0], def = _a[1];
    // istanbul ignore else
    if (!skipMock) {
        ng_mocks_universe_1.default.flags.delete('skipMock');
    }
    if (!changed) {
        return undefined;
    }
    return def;
});
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZ2V0LW92ZXJyaWRlLWRlZi5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uLy4uLy4uL2xpYnMvbmctbW9ja3Mvc3JjL2xpYi9tb2NrLWJ1aWxkZXIvcHJvbWlzZS9nZXQtb3ZlcnJpZGUtZGVmLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQUVBLHFGQUE2RDtBQUM3RCw4RUFBc0Q7QUFFdEQsbUJBQWUsVUFBQyxJQUEyQjtJQUN6QyxJQUFJLENBQUMsSUFBSSxFQUFFO1FBQ1QsT0FBTyxTQUFTLENBQUM7S0FDbEI7SUFFRCxJQUFNLFFBQVEsR0FBRywyQkFBZSxDQUFDLEtBQUssQ0FBQyxHQUFHLENBQUMsVUFBVSxDQUFDLENBQUM7SUFDdkQsdUJBQXVCO0lBQ3ZCLElBQUksQ0FBQyxRQUFRLEVBQUU7UUFDYiwyQkFBZSxDQUFDLEtBQUssQ0FBQyxHQUFHLENBQUMsVUFBVSxDQUFDLENBQUM7S0FDdkM7SUFDSyxJQUFBLEtBQUEsT0FBaUIsSUFBQSxxQkFBUyxFQUFDLElBQUksQ0FBQyxJQUFBLEVBQS9CLE9BQU8sUUFBQSxFQUFFLEdBQUcsUUFBbUIsQ0FBQztJQUN2Qyx1QkFBdUI7SUFDdkIsSUFBSSxDQUFDLFFBQVEsRUFBRTtRQUNiLDJCQUFlLENBQUMsS0FBSyxDQUFDLE1BQU0sQ0FBQyxVQUFVLENBQUMsQ0FBQztLQUMxQztJQUNELElBQUksQ0FBQyxPQUFPLEVBQUU7UUFDWixPQUFPLFNBQVMsQ0FBQztLQUNsQjtJQUVELE9BQU8sR0FBRyxDQUFDO0FBQ2IsQ0FBQyxFQUFDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgRGlyZWN0aXZlLCBOZ01vZHVsZSB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuXG5pbXBvcnQgbmdNb2Nrc1VuaXZlcnNlIGZyb20gJy4uLy4uL2NvbW1vbi9uZy1tb2Nrcy11bml2ZXJzZSc7XG5pbXBvcnQgbW9ja05nRGVmIGZyb20gJy4uLy4uL21vY2stbW9kdWxlL21vY2stbmctZGVmJztcblxuZXhwb3J0IGRlZmF1bHQgKG1ldGE/OiBEaXJlY3RpdmUgfCBOZ01vZHVsZSk6IE5nTW9kdWxlIHwgdW5kZWZpbmVkID0+IHtcbiAgaWYgKCFtZXRhKSB7XG4gICAgcmV0dXJuIHVuZGVmaW5lZDtcbiAgfVxuXG4gIGNvbnN0IHNraXBNb2NrID0gbmdNb2Nrc1VuaXZlcnNlLmZsYWdzLmhhcygnc2tpcE1vY2snKTtcbiAgLy8gaXN0YW5idWwgaWdub3JlIGVsc2VcbiAgaWYgKCFza2lwTW9jaykge1xuICAgIG5nTW9ja3NVbml2ZXJzZS5mbGFncy5hZGQoJ3NraXBNb2NrJyk7XG4gIH1cbiAgY29uc3QgW2NoYW5nZWQsIGRlZl0gPSBtb2NrTmdEZWYobWV0YSk7XG4gIC8vIGlzdGFuYnVsIGlnbm9yZSBlbHNlXG4gIGlmICghc2tpcE1vY2spIHtcbiAgICBuZ01vY2tzVW5pdmVyc2UuZmxhZ3MuZGVsZXRlKCdza2lwTW9jaycpO1xuICB9XG4gIGlmICghY2hhbmdlZCkge1xuICAgIHJldHVybiB1bmRlZmluZWQ7XG4gIH1cblxuICByZXR1cm4gZGVmO1xufTtcbiJdfQ==