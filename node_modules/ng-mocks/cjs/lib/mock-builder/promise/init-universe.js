"use strict";
var __values = (this && this.__values) || function(o) {
    var s = typeof Symbol === "function" && Symbol.iterator, m = s && o[s], i = 0;
    if (m) return m.call(o);
    if (o && typeof o.length === "number") return {
        next: function () {
            if (o && i >= o.length) o = void 0;
            return { value: o && o[i++], done: !o };
        }
    };
    throw new TypeError(s ? "Object is not iterable." : "Symbol.iterator is not defined.");
};
var __read = (this && this.__read) || function (o, n) {
    var m = typeof Symbol === "function" && o[Symbol.iterator];
    if (!m) return o;
    var i = m.call(o), r, ar = [], e;
    try {
        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);
    }
    catch (error) { e = { error: error }; }
    finally {
        try {
            if (r && !r.done && (m = i["return"])) m.call(i);
        }
        finally { if (e) throw e.error; }
    }
    return ar;
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
var core_helpers_1 = require("../../common/core.helpers");
var ng_mocks_universe_1 = __importDefault(require("../../common/ng-mocks-universe"));
var init_exclude_def_1 = __importDefault(require("./init-exclude-def"));
var init_keep_def_1 = __importDefault(require("./init-keep-def"));
var init_mock_declarations_1 = __importDefault(require("./init-mock-declarations"));
var init_modules_1 = __importDefault(require("./init-modules"));
var init_replace_def_1 = __importDefault(require("./init-replace-def"));
exports.default = (function (_a) {
    var e_1, _b;
    var configDef = _a.configDef, defProviders = _a.defProviders, defValue = _a.defValue, excludeDef = _a.excludeDef, keepDef = _a.keepDef, mockDef = _a.mockDef, replaceDef = _a.replaceDef;
    ng_mocks_universe_1.default.flags.add('cachePipe');
    // collecting multi flags of providers.
    ng_mocks_universe_1.default.config.set('ngMocksMulti', new Set());
    // collecting all deps of providers.
    ng_mocks_universe_1.default.config.set('ngMocksDeps', new Set());
    // collecting all declarations of kept modules.
    ng_mocks_universe_1.default.config.set('ngMocksDepsSkip', new Set());
    // flags to understand how to mock nested declarations.
    ng_mocks_universe_1.default.config.set('ngMocksDepsResolution', new Map());
    try {
        for (var _c = __values((0, core_helpers_1.mapEntries)(configDef)), _d = _c.next(); !_d.done; _d = _c.next()) {
            var _e = __read(_d.value, 2), k = _e[0], v = _e[1];
            ng_mocks_universe_1.default.config.set(k, v);
        }
    }
    catch (e_1_1) { e_1 = { error: e_1_1 }; }
    finally {
        try {
            if (_d && !_d.done && (_b = _c.return)) _b.call(_c);
        }
        finally { if (e_1) throw e_1.error; }
    }
    (0, init_keep_def_1.default)(keepDef);
    (0, init_replace_def_1.default)(replaceDef, defValue);
    (0, init_exclude_def_1.default)(excludeDef);
    (0, init_mock_declarations_1.default)(mockDef, defValue);
    return (0, init_modules_1.default)(keepDef, mockDef, replaceDef, defProviders);
});
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5pdC11bml2ZXJzZS5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uLy4uLy4uL2xpYnMvbmctbW9ja3Mvc3JjL2xpYi9tb2NrLWJ1aWxkZXIvcHJvbWlzZS9pbml0LXVuaXZlcnNlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBQUEsMERBQXVEO0FBQ3ZELHFGQUE2RDtBQUU3RCx3RUFBZ0Q7QUFDaEQsa0VBQTBDO0FBQzFDLG9GQUE0RDtBQUM1RCxnRUFBeUM7QUFDekMsd0VBQWdEO0FBR2hELG1CQUFlLFVBQUMsRUFRRjs7UUFQWixTQUFTLGVBQUEsRUFDVCxZQUFZLGtCQUFBLEVBQ1osUUFBUSxjQUFBLEVBQ1IsVUFBVSxnQkFBQSxFQUNWLE9BQU8sYUFBQSxFQUNQLE9BQU8sYUFBQSxFQUNQLFVBQVUsZ0JBQUE7SUFFViwyQkFBZSxDQUFDLEtBQUssQ0FBQyxHQUFHLENBQUMsV0FBVyxDQUFDLENBQUM7SUFFdkMsdUNBQXVDO0lBQ3ZDLDJCQUFlLENBQUMsTUFBTSxDQUFDLEdBQUcsQ0FBQyxjQUFjLEVBQUUsSUFBSSxHQUFHLEVBQUUsQ0FBQyxDQUFDO0lBQ3RELG9DQUFvQztJQUNwQywyQkFBZSxDQUFDLE1BQU0sQ0FBQyxHQUFHLENBQUMsYUFBYSxFQUFFLElBQUksR0FBRyxFQUFFLENBQUMsQ0FBQztJQUNyRCwrQ0FBK0M7SUFDL0MsMkJBQWUsQ0FBQyxNQUFNLENBQUMsR0FBRyxDQUFDLGlCQUFpQixFQUFFLElBQUksR0FBRyxFQUFFLENBQUMsQ0FBQztJQUN6RCx1REFBdUQ7SUFDdkQsMkJBQWUsQ0FBQyxNQUFNLENBQUMsR0FBRyxDQUFDLHVCQUF1QixFQUFFLElBQUksR0FBRyxFQUFFLENBQUMsQ0FBQzs7UUFDL0QsS0FBcUIsSUFBQSxLQUFBLFNBQUEsSUFBQSx5QkFBVSxFQUFDLFNBQVMsQ0FBQyxDQUFBLGdCQUFBLDRCQUFFO1lBQWpDLElBQUEsS0FBQSxtQkFBTSxFQUFMLENBQUMsUUFBQSxFQUFFLENBQUMsUUFBQTtZQUNkLDJCQUFlLENBQUMsTUFBTSxDQUFDLEdBQUcsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUM7U0FDbEM7Ozs7Ozs7OztJQUNELElBQUEsdUJBQVcsRUFBQyxPQUFPLENBQUMsQ0FBQztJQUNyQixJQUFBLDBCQUFjLEVBQUMsVUFBVSxFQUFFLFFBQVEsQ0FBQyxDQUFDO0lBQ3JDLElBQUEsMEJBQWMsRUFBQyxVQUFVLENBQUMsQ0FBQztJQUMzQixJQUFBLGdDQUFvQixFQUFDLE9BQU8sRUFBRSxRQUFRLENBQUMsQ0FBQztJQUV4QyxPQUFPLElBQUEsc0JBQVcsRUFBQyxPQUFPLEVBQUUsT0FBTyxFQUFFLFVBQVUsRUFBRSxZQUFZLENBQUMsQ0FBQztBQUNqRSxDQUFDLEVBQUMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBtYXBFbnRyaWVzIH0gZnJvbSAnLi4vLi4vY29tbW9uL2NvcmUuaGVscGVycyc7XG5pbXBvcnQgbmdNb2Nrc1VuaXZlcnNlIGZyb20gJy4uLy4uL2NvbW1vbi9uZy1tb2Nrcy11bml2ZXJzZSc7XG5cbmltcG9ydCBpbml0RXhjbHVkZURlZiBmcm9tICcuL2luaXQtZXhjbHVkZS1kZWYnO1xuaW1wb3J0IGluaXRLZWVwRGVmIGZyb20gJy4vaW5pdC1rZWVwLWRlZic7XG5pbXBvcnQgaW5pdE1vY2tEZWNsYXJhdGlvbnMgZnJvbSAnLi9pbml0LW1vY2stZGVjbGFyYXRpb25zJztcbmltcG9ydCBpbml0TW9kdWxlcyBmcm9tICcuL2luaXQtbW9kdWxlcyc7XG5pbXBvcnQgaW5pdFJlcGxhY2VEZWYgZnJvbSAnLi9pbml0LXJlcGxhY2UtZGVmJztcbmltcG9ydCB7IEJ1aWxkZXJEYXRhIH0gZnJvbSAnLi90eXBlcyc7XG5cbmV4cG9ydCBkZWZhdWx0ICh7XG4gIGNvbmZpZ0RlZixcbiAgZGVmUHJvdmlkZXJzLFxuICBkZWZWYWx1ZSxcbiAgZXhjbHVkZURlZixcbiAga2VlcERlZixcbiAgbW9ja0RlZixcbiAgcmVwbGFjZURlZixcbn06IEJ1aWxkZXJEYXRhKTogTWFwPGFueSwgYW55PiA9PiB7XG4gIG5nTW9ja3NVbml2ZXJzZS5mbGFncy5hZGQoJ2NhY2hlUGlwZScpO1xuXG4gIC8vIGNvbGxlY3RpbmcgbXVsdGkgZmxhZ3Mgb2YgcHJvdmlkZXJzLlxuICBuZ01vY2tzVW5pdmVyc2UuY29uZmlnLnNldCgnbmdNb2Nrc011bHRpJywgbmV3IFNldCgpKTtcbiAgLy8gY29sbGVjdGluZyBhbGwgZGVwcyBvZiBwcm92aWRlcnMuXG4gIG5nTW9ja3NVbml2ZXJzZS5jb25maWcuc2V0KCduZ01vY2tzRGVwcycsIG5ldyBTZXQoKSk7XG4gIC8vIGNvbGxlY3RpbmcgYWxsIGRlY2xhcmF0aW9ucyBvZiBrZXB0IG1vZHVsZXMuXG4gIG5nTW9ja3NVbml2ZXJzZS5jb25maWcuc2V0KCduZ01vY2tzRGVwc1NraXAnLCBuZXcgU2V0KCkpO1xuICAvLyBmbGFncyB0byB1bmRlcnN0YW5kIGhvdyB0byBtb2NrIG5lc3RlZCBkZWNsYXJhdGlvbnMuXG4gIG5nTW9ja3NVbml2ZXJzZS5jb25maWcuc2V0KCduZ01vY2tzRGVwc1Jlc29sdXRpb24nLCBuZXcgTWFwKCkpO1xuICBmb3IgKGNvbnN0IFtrLCB2XSBvZiBtYXBFbnRyaWVzKGNvbmZpZ0RlZikpIHtcbiAgICBuZ01vY2tzVW5pdmVyc2UuY29uZmlnLnNldChrLCB2KTtcbiAgfVxuICBpbml0S2VlcERlZihrZWVwRGVmKTtcbiAgaW5pdFJlcGxhY2VEZWYocmVwbGFjZURlZiwgZGVmVmFsdWUpO1xuICBpbml0RXhjbHVkZURlZihleGNsdWRlRGVmKTtcbiAgaW5pdE1vY2tEZWNsYXJhdGlvbnMobW9ja0RlZiwgZGVmVmFsdWUpO1xuXG4gIHJldHVybiBpbml0TW9kdWxlcyhrZWVwRGVmLCBtb2NrRGVmLCByZXBsYWNlRGVmLCBkZWZQcm92aWRlcnMpO1xufTtcbiJdfQ==