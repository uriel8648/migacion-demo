"use strict";
// Extracts dependency among flags of parameters.
var __values = (this && this.__values) || function(o) {
    var s = typeof Symbol === "function" && Symbol.iterator, m = s && o[s], i = 0;
    if (m) return m.call(o);
    if (o && typeof o.length === "number") return {
        next: function () {
            if (o && i >= o.length) o = void 0;
            return { value: o && o[i++], done: !o };
        }
    };
    throw new TypeError(s ? "Object is not iterable." : "Symbol.iterator is not defined.");
};
Object.defineProperty(exports, "__esModule", { value: true });
var detectForwardRed = function (provide) {
    if (typeof provide === 'function' && provide.__forward_ref__) {
        return provide();
    }
    return provide;
};
exports.default = (function (decorators) {
    var e_1, _a;
    if (!decorators) {
        return;
    }
    var provide;
    try {
        for (var decorators_1 = __values(decorators), decorators_1_1 = decorators_1.next(); !decorators_1_1.done; decorators_1_1 = decorators_1.next()) {
            var decorator = decorators_1_1.value;
            if (decorator && typeof decorator === 'object' && decorator.token) {
                provide = decorator.token;
            }
            if (!provide && decorator && (typeof decorator !== 'object' || !decorator.ngMetadataName)) {
                provide = decorator;
            }
        }
    }
    catch (e_1_1) { e_1 = { error: e_1_1 }; }
    finally {
        try {
            if (decorators_1_1 && !decorators_1_1.done && (_a = decorators_1.return)) _a.call(decorators_1);
        }
        finally { if (e_1) throw e_1.error; }
    }
    return detectForwardRed(provide);
});
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZXh0cmFjdC1kZXAuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi8uLi8uLi9saWJzL25nLW1vY2tzL3NyYy9saWIvbW9jay1idWlsZGVyL3Byb21pc2UvZXh0cmFjdC1kZXAudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQUFBLGlEQUFpRDs7Ozs7Ozs7Ozs7OztBQUVqRCxJQUFNLGdCQUFnQixHQUFHLFVBQUMsT0FBWTtJQUNwQyxJQUFJLE9BQU8sT0FBTyxLQUFLLFVBQVUsSUFBSSxPQUFPLENBQUMsZUFBZSxFQUFFO1FBQzVELE9BQU8sT0FBTyxFQUFFLENBQUM7S0FDbEI7SUFFRCxPQUFPLE9BQU8sQ0FBQztBQUNqQixDQUFDLENBQUM7QUFFRixtQkFBZSxVQUFDLFVBQWtCOztJQUNoQyxJQUFJLENBQUMsVUFBVSxFQUFFO1FBQ2YsT0FBTztLQUNSO0lBRUQsSUFBSSxPQUFZLENBQUM7O1FBQ2pCLEtBQXdCLElBQUEsZUFBQSxTQUFBLFVBQVUsQ0FBQSxzQ0FBQSw4REFBRTtZQUEvQixJQUFNLFNBQVMsdUJBQUE7WUFDbEIsSUFBSSxTQUFTLElBQUksT0FBTyxTQUFTLEtBQUssUUFBUSxJQUFJLFNBQVMsQ0FBQyxLQUFLLEVBQUU7Z0JBQ2pFLE9BQU8sR0FBRyxTQUFTLENBQUMsS0FBSyxDQUFDO2FBQzNCO1lBQ0QsSUFBSSxDQUFDLE9BQU8sSUFBSSxTQUFTLElBQUksQ0FBQyxPQUFPLFNBQVMsS0FBSyxRQUFRLElBQUksQ0FBQyxTQUFTLENBQUMsY0FBYyxDQUFDLEVBQUU7Z0JBQ3pGLE9BQU8sR0FBRyxTQUFTLENBQUM7YUFDckI7U0FDRjs7Ozs7Ozs7O0lBRUQsT0FBTyxnQkFBZ0IsQ0FBQyxPQUFPLENBQUMsQ0FBQztBQUNuQyxDQUFDLEVBQUMiLCJzb3VyY2VzQ29udGVudCI6WyIvLyBFeHRyYWN0cyBkZXBlbmRlbmN5IGFtb25nIGZsYWdzIG9mIHBhcmFtZXRlcnMuXG5cbmNvbnN0IGRldGVjdEZvcndhcmRSZWQgPSAocHJvdmlkZTogYW55KTogYW55ID0+IHtcbiAgaWYgKHR5cGVvZiBwcm92aWRlID09PSAnZnVuY3Rpb24nICYmIHByb3ZpZGUuX19mb3J3YXJkX3JlZl9fKSB7XG4gICAgcmV0dXJuIHByb3ZpZGUoKTtcbiAgfVxuXG4gIHJldHVybiBwcm92aWRlO1xufTtcblxuZXhwb3J0IGRlZmF1bHQgKGRlY29yYXRvcnM/OiBhbnlbXSk6IGFueSA9PiB7XG4gIGlmICghZGVjb3JhdG9ycykge1xuICAgIHJldHVybjtcbiAgfVxuXG4gIGxldCBwcm92aWRlOiBhbnk7XG4gIGZvciAoY29uc3QgZGVjb3JhdG9yIG9mIGRlY29yYXRvcnMpIHtcbiAgICBpZiAoZGVjb3JhdG9yICYmIHR5cGVvZiBkZWNvcmF0b3IgPT09ICdvYmplY3QnICYmIGRlY29yYXRvci50b2tlbikge1xuICAgICAgcHJvdmlkZSA9IGRlY29yYXRvci50b2tlbjtcbiAgICB9XG4gICAgaWYgKCFwcm92aWRlICYmIGRlY29yYXRvciAmJiAodHlwZW9mIGRlY29yYXRvciAhPT0gJ29iamVjdCcgfHwgIWRlY29yYXRvci5uZ01ldGFkYXRhTmFtZSkpIHtcbiAgICAgIHByb3ZpZGUgPSBkZWNvcmF0b3I7XG4gICAgfVxuICB9XG5cbiAgcmV0dXJuIGRldGVjdEZvcndhcmRSZWQocHJvdmlkZSk7XG59O1xuIl19