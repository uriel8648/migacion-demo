"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __generator = (this && this.__generator) || function (thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (_) try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [op[0] & 2, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
};
var __values = (this && this.__values) || function(o) {
    var s = typeof Symbol === "function" && Symbol.iterator, m = s && o[s], i = 0;
    if (m) return m.call(o);
    if (o && typeof o.length === "number") return {
        next: function () {
            if (o && i >= o.length) o = void 0;
            return { value: o && o[i++], done: !o };
        }
    };
    throw new TypeError(s ? "Object is not iterable." : "Symbol.iterator is not defined.");
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.MockBuilderPerformance = void 0;
var testing_1 = require("@angular/core/testing");
var ng_mocks_universe_1 = __importDefault(require("../common/ng-mocks-universe"));
var mock_builder_promise_1 = require("./mock-builder.promise");
var add_entities_to_map_1 = __importDefault(require("./performance/add-entities-to-map"));
var add_values_to_set_1 = __importDefault(require("./performance/add-values-to-set"));
var are_equal_config_params_1 = __importDefault(require("./performance/are-equal-config-params"));
var are_equal_maps_1 = __importDefault(require("./performance/are-equal-maps"));
var are_equal_providers_1 = __importDefault(require("./performance/are-equal-providers"));
var are_equal_sets_1 = __importDefault(require("./performance/are-equal-sets"));
var get_empty_config_1 = __importDefault(require("./performance/get-empty-config"));
var required_metadata_1 = __importDefault(require("./performance/required-metadata"));
var MockBuilderPerformance = /** @class */ (function (_super) {
    __extends(MockBuilderPerformance, _super);
    function MockBuilderPerformance() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    MockBuilderPerformance.prototype.build = function () {
        var global = ng_mocks_universe_1.default.global;
        // avoiding influences on cache when users extend the testing module.
        if (global.has('builder:module') && global.has('builder:config') && this.equalsTo(global.get('builder:config'))) {
            return (0, required_metadata_1.default)(global.get('builder:module'));
        }
        // removal of cached promise in case of mismatch
        if (global.has('builder:module')) {
            global.delete(global.get('builder:module'));
        }
        global.set('builder:config', this.cloneConfig());
        var ngModule = _super.prototype.build.call(this);
        global.set('builder:module', ngModule);
        // avoiding influences on cache when users extend the testing module.
        return (0, required_metadata_1.default)(ngModule);
    };
    MockBuilderPerformance.prototype.then = function (fulfill, reject) {
        return __awaiter(this, void 0, void 0, function () {
            var global, flags, promise;
            return __generator(this, function (_a) {
                global = ng_mocks_universe_1.default.global;
                flags = global.has('bullet') && global.has('builder:module') && global.has('builder:config');
                if (flags && this.equalsTo(global.get('builder:config'))) {
                    return [2 /*return*/, global.get(global.get('builder:module')).then(fulfill, reject)];
                }
                // we need to reset testing module in case if we are in bullet mode but current module does not match.
                if (global.has('bullet') && global.has('bullet:reset')) {
                    // tslint:disable-next-line no-console
                    console.warn('ngMocks.faster has zero effect due to changes in testing module between runs');
                    global.delete('bullet');
                    testing_1.TestBed.resetTestingModule();
                    global.set('bullet', true);
                }
                promise = _super.prototype.then.call(this, fulfill, reject);
                global.set(global.get('builder:module'), promise);
                return [2 /*return*/, promise];
            });
        });
    };
    MockBuilderPerformance.prototype.cloneConfig = function () {
        var config = (0, get_empty_config_1.default)();
        (0, add_values_to_set_1.default)(this.beforeCC, config.beforeCC);
        (0, add_values_to_set_1.default)(this.excludeDef, config.excludeDef);
        (0, add_values_to_set_1.default)(this.keepDef, config.keepDef);
        (0, add_values_to_set_1.default)(this.mockDef, config.mockDef);
        (0, add_values_to_set_1.default)(this.replaceDef, config.replaceDef);
        (0, add_entities_to_map_1.default)(this.configDef, config.configDef);
        (0, add_entities_to_map_1.default)(this.defProviders, config.defProviders);
        (0, add_entities_to_map_1.default)(this.defValue, config.defValue);
        (0, add_entities_to_map_1.default)(this.providerDef, config.providerDef);
        return config;
    };
    MockBuilderPerformance.prototype.equalsTo = function (prototype) {
        var e_1, _a, e_2, _b, e_3, _c;
        try {
            for (var _d = __values(['beforeCC', 'keepDef', 'replaceDef', 'excludeDef', 'mockDef']), _e = _d.next(); !_e.done; _e = _d.next()) {
                var key = _e.value;
                if (!(0, are_equal_sets_1.default)(this[key], prototype[key])) {
                    return false;
                }
            }
        }
        catch (e_1_1) { e_1 = { error: e_1_1 }; }
        finally {
            try {
                if (_e && !_e.done && (_a = _d.return)) _a.call(_d);
            }
            finally { if (e_1) throw e_1.error; }
        }
        try {
            for (var _f = __values(['defValue']), _g = _f.next(); !_g.done; _g = _f.next()) {
                var key = _g.value;
                if (!(0, are_equal_maps_1.default)(this[key], prototype[key])) {
                    return false;
                }
            }
        }
        catch (e_2_1) { e_2 = { error: e_2_1 }; }
        finally {
            try {
                if (_g && !_g.done && (_b = _f.return)) _b.call(_f);
            }
            finally { if (e_2) throw e_2.error; }
        }
        try {
            for (var _h = __values(['providerDef', 'defProviders']), _j = _h.next(); !_j.done; _j = _h.next()) {
                var key = _j.value;
                if (!(0, are_equal_maps_1.default)(this[key], prototype[key], are_equal_providers_1.default)) {
                    return false;
                }
            }
        }
        catch (e_3_1) { e_3 = { error: e_3_1 }; }
        finally {
            try {
                if (_j && !_j.done && (_c = _h.return)) _c.call(_h);
            }
            finally { if (e_3) throw e_3.error; }
        }
        return (0, are_equal_maps_1.default)(this.configDef, prototype.configDef, are_equal_config_params_1.default);
    };
    return MockBuilderPerformance;
}(mock_builder_promise_1.MockBuilderPromise));
exports.MockBuilderPerformance = MockBuilderPerformance;
//# sourceMappingURL=data:application/json;base64,