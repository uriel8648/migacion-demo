"use strict";
var __values = (this && this.__values) || function(o) {
    var s = typeof Symbol === "function" && Symbol.iterator, m = s && o[s], i = 0;
    if (m) return m.call(o);
    if (o && typeof o.length === "number") return {
        next: function () {
            if (o && i >= o.length) o = void 0;
            return { value: o && o[i++], done: !o };
        }
    };
    throw new TypeError(s ? "Object is not iterable." : "Symbol.iterator is not defined.");
};
Object.defineProperty(exports, "__esModule", { value: true });
var core_helpers_1 = require("../common/core.helpers");
var core_tokens_1 = require("../common/core.tokens");
exports.default = (function (providers) {
    var e_1, _a;
    var mocks;
    var overrides;
    var touches;
    try {
        for (var _b = __values((0, core_helpers_1.flatten)(providers || [])), _c = _b.next(); !_c.done; _c = _b.next()) {
            var provide = _c.value;
            if (typeof provide !== 'object') {
                continue;
            }
            if (provide.provide === core_tokens_1.NG_MOCKS) {
                mocks = provide.useValue;
            }
            if (provide.provide === core_tokens_1.NG_MOCKS_OVERRIDES) {
                overrides = provide.useValue;
            }
            if (provide.provide === core_tokens_1.NG_MOCKS_TOUCHES) {
                touches = provide.useValue;
            }
        }
    }
    catch (e_1_1) { e_1 = { error: e_1_1 }; }
    finally {
        try {
            if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
        }
        finally { if (e_1) throw e_1.error; }
    }
    return {
        mocks: mocks,
        overrides: overrides,
        touches: touches,
    };
});
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZnVuYy5leHRyYWN0LXRva2Vucy5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uLy4uL2xpYnMvbmctbW9ja3Mvc3JjL2xpYi9tb2NrLWJ1aWxkZXIvZnVuYy5leHRyYWN0LXRva2Vucy50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7O0FBRUEsdURBQWlEO0FBQ2pELHFEQUF1RjtBQUd2RixtQkFBZSxVQUNiLFNBQWM7O0lBTWQsSUFBSSxLQUFnQyxDQUFDO0lBQ3JDLElBQUksU0FBd0YsQ0FBQztJQUM3RixJQUFJLE9BQTZCLENBQUM7O1FBRWxDLEtBQXNCLElBQUEsS0FBQSxTQUFBLElBQUEsc0JBQU8sRUFBQyxTQUFTLElBQUksRUFBRSxDQUFDLENBQUEsZ0JBQUEsNEJBQUU7WUFBM0MsSUFBTSxPQUFPLFdBQUE7WUFDaEIsSUFBSSxPQUFPLE9BQU8sS0FBSyxRQUFRLEVBQUU7Z0JBQy9CLFNBQVM7YUFDVjtZQUNELElBQUksT0FBTyxDQUFDLE9BQU8sS0FBSyxzQkFBUSxFQUFFO2dCQUNoQyxLQUFLLEdBQUcsT0FBTyxDQUFDLFFBQVEsQ0FBQzthQUMxQjtZQUNELElBQUksT0FBTyxDQUFDLE9BQU8sS0FBSyxnQ0FBa0IsRUFBRTtnQkFDMUMsU0FBUyxHQUFHLE9BQU8sQ0FBQyxRQUFRLENBQUM7YUFDOUI7WUFDRCxJQUFJLE9BQU8sQ0FBQyxPQUFPLEtBQUssOEJBQWdCLEVBQUU7Z0JBQ3hDLE9BQU8sR0FBRyxPQUFPLENBQUMsUUFBUSxDQUFDO2FBQzVCO1NBQ0Y7Ozs7Ozs7OztJQUVELE9BQU87UUFDTCxLQUFLLE9BQUE7UUFDTCxTQUFTLFdBQUE7UUFDVCxPQUFPLFNBQUE7S0FDUixDQUFDO0FBQ0osQ0FBQyxFQUFDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgTWV0YWRhdGFPdmVycmlkZSB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUvdGVzdGluZyc7XG5cbmltcG9ydCB7IGZsYXR0ZW4gfSBmcm9tICcuLi9jb21tb24vY29yZS5oZWxwZXJzJztcbmltcG9ydCB7IE5HX01PQ0tTLCBOR19NT0NLU19PVkVSUklERVMsIE5HX01PQ0tTX1RPVUNIRVMgfSBmcm9tICcuLi9jb21tb24vY29yZS50b2tlbnMnO1xuaW1wb3J0IHsgQW55VHlwZSB9IGZyb20gJy4uL2NvbW1vbi9jb3JlLnR5cGVzJztcblxuZXhwb3J0IGRlZmF1bHQgKFxuICBwcm92aWRlcnM6IGFueSxcbik6IHtcbiAgbW9ja3M/OiBNYXA8YW55LCBhbnk+O1xuICBvdmVycmlkZXM/OiBNYXA8QW55VHlwZTxhbnk+LCBbTWV0YWRhdGFPdmVycmlkZTxhbnk+LCBNZXRhZGF0YU92ZXJyaWRlPGFueT5dPjtcbiAgdG91Y2hlcz86IFNldDxhbnk+O1xufSA9PiB7XG4gIGxldCBtb2NrczogTWFwPGFueSwgYW55PiB8IHVuZGVmaW5lZDtcbiAgbGV0IG92ZXJyaWRlczogTWFwPEFueVR5cGU8YW55PiwgW01ldGFkYXRhT3ZlcnJpZGU8YW55PiwgTWV0YWRhdGFPdmVycmlkZTxhbnk+XT4gfCB1bmRlZmluZWQ7XG4gIGxldCB0b3VjaGVzOiBTZXQ8YW55PiB8IHVuZGVmaW5lZDtcblxuICBmb3IgKGNvbnN0IHByb3ZpZGUgb2YgZmxhdHRlbihwcm92aWRlcnMgfHwgW10pKSB7XG4gICAgaWYgKHR5cGVvZiBwcm92aWRlICE9PSAnb2JqZWN0Jykge1xuICAgICAgY29udGludWU7XG4gICAgfVxuICAgIGlmIChwcm92aWRlLnByb3ZpZGUgPT09IE5HX01PQ0tTKSB7XG4gICAgICBtb2NrcyA9IHByb3ZpZGUudXNlVmFsdWU7XG4gICAgfVxuICAgIGlmIChwcm92aWRlLnByb3ZpZGUgPT09IE5HX01PQ0tTX09WRVJSSURFUykge1xuICAgICAgb3ZlcnJpZGVzID0gcHJvdmlkZS51c2VWYWx1ZTtcbiAgICB9XG4gICAgaWYgKHByb3ZpZGUucHJvdmlkZSA9PT0gTkdfTU9DS1NfVE9VQ0hFUykge1xuICAgICAgdG91Y2hlcyA9IHByb3ZpZGUudXNlVmFsdWU7XG4gICAgfVxuICB9XG5cbiAgcmV0dXJuIHtcbiAgICBtb2NrcyxcbiAgICBvdmVycmlkZXMsXG4gICAgdG91Y2hlcyxcbiAgfTtcbn07XG4iXX0=