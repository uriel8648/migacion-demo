"use strict";
var __values = (this && this.__values) || function(o) {
    var s = typeof Symbol === "function" && Symbol.iterator, m = s && o[s], i = 0;
    if (m) return m.call(o);
    if (o && typeof o.length === "number") return {
        next: function () {
            if (o && i >= o.length) o = void 0;
            return { value: o && o[i++], done: !o };
        }
    };
    throw new TypeError(s ? "Object is not iterable." : "Symbol.iterator is not defined.");
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
var func_get_from_node_element_1 = __importDefault(require("./func.get-from-node-element"));
var func_get_from_node_scan_1 = __importDefault(require("./func.get-from-node-scan"));
var normalize = function (item) {
    var e_1, _a;
    if (!item || typeof item !== 'object') {
        return item;
    }
    try {
        for (var _b = __values(['renderElement', 'renderText', 'instance']), _c = _b.next(); !_c.done; _c = _b.next()) {
            var key = _c.value;
            if (item[key]) {
                return item[key];
            }
        }
    }
    catch (e_1_1) { e_1 = { error: e_1_1 }; }
    finally {
        try {
            if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
        }
        finally { if (e_1) throw e_1.error; }
    }
    return null;
};
exports.default = (function (result, node, proto) {
    if (!node || !node._debugContext) {
        return;
    }
    var el = (0, func_get_from_node_element_1.default)(node);
    (0, func_get_from_node_scan_1.default)({
        el: el,
        nodes: node._debugContext.view.nodes,
        normalize: normalize,
        proto: proto,
        result: result,
    }, true);
});
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZnVuYy5nZXQtZnJvbS1ub2RlLXN0YW5kYXJkLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vLi4vbGlicy9uZy1tb2Nrcy9zcmMvbGliL21vY2staGVscGVyL2Z1bmMuZ2V0LWZyb20tbm9kZS1zdGFuZGFyZC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7O0FBS0EsNEZBQWtFO0FBQ2xFLHNGQUE0RDtBQUU1RCxJQUFNLFNBQVMsR0FBRyxVQUFDLElBQVM7O0lBQzFCLElBQUksQ0FBQyxJQUFJLElBQUksT0FBTyxJQUFJLEtBQUssUUFBUSxFQUFFO1FBQ3JDLE9BQU8sSUFBSSxDQUFDO0tBQ2I7O1FBRUQsS0FBa0IsSUFBQSxLQUFBLFNBQUEsQ0FBQyxlQUFlLEVBQUUsWUFBWSxFQUFFLFVBQVUsQ0FBQyxDQUFBLGdCQUFBLDRCQUFFO1lBQTFELElBQU0sR0FBRyxXQUFBO1lBQ1osSUFBSSxJQUFJLENBQUMsR0FBRyxDQUFDLEVBQUU7Z0JBQ2IsT0FBTyxJQUFJLENBQUMsR0FBRyxDQUFDLENBQUM7YUFDbEI7U0FDRjs7Ozs7Ozs7O0lBRUQsT0FBTyxJQUFJLENBQUM7QUFDZCxDQUFDLENBQUM7QUFFRixtQkFBZSxVQUFJLE1BQVcsRUFBRSxJQUEyQyxFQUFFLEtBQWM7SUFDekYsSUFBSSxDQUFDLElBQUksSUFBSSxDQUFDLElBQUksQ0FBQyxhQUFhLEVBQUU7UUFDaEMsT0FBTztLQUNSO0lBRUQsSUFBTSxFQUFFLEdBQUcsSUFBQSxvQ0FBc0IsRUFBQyxJQUFJLENBQUMsQ0FBQztJQUV4QyxJQUFBLGlDQUFtQixFQUNqQjtRQUNFLEVBQUUsSUFBQTtRQUNGLEtBQUssRUFBRSxJQUFJLENBQUMsYUFBYSxDQUFDLElBQUksQ0FBQyxLQUFLO1FBQ3BDLFNBQVMsV0FBQTtRQUNULEtBQUssT0FBQTtRQUNMLE1BQU0sUUFBQTtLQUNQLEVBQ0QsSUFBSSxDQUNMLENBQUM7QUFDSixDQUFDLEVBQUMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBEZWJ1Z05vZGUgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcblxuaW1wb3J0IHsgVHlwZSB9IGZyb20gJy4uL2NvbW1vbi9jb3JlLnR5cGVzJztcblxuaW1wb3J0IHsgTm9kZSB9IGZyb20gJy4vZnVuYy5nZXQtZnJvbS1ub2RlJztcbmltcG9ydCBmdW5jR2V0RnJvbU5vZGVFbGVtZW50IGZyb20gJy4vZnVuYy5nZXQtZnJvbS1ub2RlLWVsZW1lbnQnO1xuaW1wb3J0IGZ1bmNHZXRGcm9tTm9kZVNjYW4gZnJvbSAnLi9mdW5jLmdldC1mcm9tLW5vZGUtc2Nhbic7XG5cbmNvbnN0IG5vcm1hbGl6ZSA9IChpdGVtOiBhbnkpOiBhbnkgPT4ge1xuICBpZiAoIWl0ZW0gfHwgdHlwZW9mIGl0ZW0gIT09ICdvYmplY3QnKSB7XG4gICAgcmV0dXJuIGl0ZW07XG4gIH1cblxuICBmb3IgKGNvbnN0IGtleSBvZiBbJ3JlbmRlckVsZW1lbnQnLCAncmVuZGVyVGV4dCcsICdpbnN0YW5jZSddKSB7XG4gICAgaWYgKGl0ZW1ba2V5XSkge1xuICAgICAgcmV0dXJuIGl0ZW1ba2V5XTtcbiAgICB9XG4gIH1cblxuICByZXR1cm4gbnVsbDtcbn07XG5cbmV4cG9ydCBkZWZhdWx0IDxUPihyZXN1bHQ6IFRbXSwgbm9kZTogKERlYnVnTm9kZSAmIE5vZGUpIHwgbnVsbCB8IHVuZGVmaW5lZCwgcHJvdG86IFR5cGU8VD4pOiB2b2lkID0+IHtcbiAgaWYgKCFub2RlIHx8ICFub2RlLl9kZWJ1Z0NvbnRleHQpIHtcbiAgICByZXR1cm47XG4gIH1cblxuICBjb25zdCBlbCA9IGZ1bmNHZXRGcm9tTm9kZUVsZW1lbnQobm9kZSk7XG5cbiAgZnVuY0dldEZyb21Ob2RlU2NhbihcbiAgICB7XG4gICAgICBlbCxcbiAgICAgIG5vZGVzOiBub2RlLl9kZWJ1Z0NvbnRleHQudmlldy5ub2RlcyxcbiAgICAgIG5vcm1hbGl6ZSxcbiAgICAgIHByb3RvLFxuICAgICAgcmVzdWx0LFxuICAgIH0sXG4gICAgdHJ1ZSxcbiAgKTtcbn07XG4iXX0=