"use strict";
var __values = (this && this.__values) || function(o) {
    var s = typeof Symbol === "function" && Symbol.iterator, m = s && o[s], i = 0;
    if (m) return m.call(o);
    if (o && typeof o.length === "number") return {
        next: function () {
            if (o && i >= o.length) o = void 0;
            return { value: o && o[i++], done: !o };
        }
    };
    throw new TypeError(s ? "Object is not iterable." : "Symbol.iterator is not defined.");
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
var detect_text_node_1 = __importDefault(require("./detect-text-node"));
var el_def_compare_1 = __importDefault(require("./el-def-compare"));
var el_def_get_node_1 = __importDefault(require("./el-def-get-node"));
var el_def_get_parent_1 = __importDefault(require("./el-def-get-parent"));
exports.default = (function (node) {
    var e_1, _a;
    var _b;
    var elDef = (0, el_def_get_node_1.default)(node);
    if (!elDef || (0, detect_text_node_1.default)(node)) {
        return [];
    }
    var isDirect = node.childNodes !== undefined;
    var children = [];
    try {
        for (var _c = __values(node.childNodes || ((_b = node.parent) === null || _b === void 0 ? void 0 : _b.childNodes) || []), _d = _c.next(); !_d.done; _d = _c.next()) {
            var childNode = _d.value;
            var childNodeParent = (0, el_def_get_parent_1.default)(childNode);
            if (!isDirect && !(0, el_def_compare_1.default)(elDef, childNodeParent)) {
                continue;
            }
            if (childNodeParent && !(0, el_def_compare_1.default)(elDef, childNodeParent)) {
                continue;
            }
            children.push(childNode);
        }
    }
    catch (e_1_1) { e_1 = { error: e_1_1 }; }
    finally {
        try {
            if (_d && !_d.done && (_a = _c.return)) _a.call(_c);
        }
        finally { if (e_1) throw e_1.error; }
    }
    return children;
});
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibmVzdGVkLWNoZWNrLWNoaWxkcmVuLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vLi4vLi4vbGlicy9uZy1tb2Nrcy9zcmMvbGliL21vY2staGVscGVyL2NyYXdsL25lc3RlZC1jaGVjay1jaGlsZHJlbi50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7O0FBRUEsd0VBQWdEO0FBQ2hELG9FQUE0QztBQUM1QyxzRUFBNkM7QUFDN0MsMEVBQWlEO0FBRWpELG1CQUFlLFVBQUMsSUFBcUI7OztJQUNuQyxJQUFNLEtBQUssR0FBRyxJQUFBLHlCQUFZLEVBQUMsSUFBSSxDQUFDLENBQUM7SUFDakMsSUFBSSxDQUFDLEtBQUssSUFBSSxJQUFBLDBCQUFjLEVBQUMsSUFBSSxDQUFDLEVBQUU7UUFDbEMsT0FBTyxFQUFFLENBQUM7S0FDWDtJQUVELElBQU0sUUFBUSxHQUFJLElBQVksQ0FBQyxVQUFVLEtBQUssU0FBUyxDQUFDO0lBQ3hELElBQU0sUUFBUSxHQUFzQixFQUFFLENBQUM7O1FBQ3ZDLEtBQXdCLElBQUEsS0FBQSxTQUFDLElBQVksQ0FBQyxVQUFVLEtBQUksTUFBQSxJQUFJLENBQUMsTUFBTSwwQ0FBRSxVQUFVLENBQUEsSUFBSSxFQUFFLENBQUEsZ0JBQUEsNEJBQUU7WUFBOUUsSUFBTSxTQUFTLFdBQUE7WUFDbEIsSUFBTSxlQUFlLEdBQUcsSUFBQSwyQkFBYyxFQUFDLFNBQVMsQ0FBQyxDQUFDO1lBRWxELElBQUksQ0FBQyxRQUFRLElBQUksQ0FBQyxJQUFBLHdCQUFZLEVBQUMsS0FBSyxFQUFFLGVBQWUsQ0FBQyxFQUFFO2dCQUN0RCxTQUFTO2FBQ1Y7WUFDRCxJQUFJLGVBQWUsSUFBSSxDQUFDLElBQUEsd0JBQVksRUFBQyxLQUFLLEVBQUUsZUFBZSxDQUFDLEVBQUU7Z0JBQzVELFNBQVM7YUFDVjtZQUVELFFBQVEsQ0FBQyxJQUFJLENBQUMsU0FBUyxDQUFDLENBQUM7U0FDMUI7Ozs7Ozs7OztJQUVELE9BQU8sUUFBUSxDQUFDO0FBQ2xCLENBQUMsRUFBQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IE1vY2tlZERlYnVnTm9kZSB9IGZyb20gJy4uLy4uL21vY2stcmVuZGVyL3R5cGVzJztcblxuaW1wb3J0IGRldGVjdFRleHROb2RlIGZyb20gJy4vZGV0ZWN0LXRleHQtbm9kZSc7XG5pbXBvcnQgZWxEZWZDb21wYXJlIGZyb20gJy4vZWwtZGVmLWNvbXBhcmUnO1xuaW1wb3J0IGVsRGVmR2V0Tm9kZSBmcm9tICcuL2VsLWRlZi1nZXQtbm9kZSc7XG5pbXBvcnQgZWxEZWZHZXRQYXJlbnQgZnJvbSAnLi9lbC1kZWYtZ2V0LXBhcmVudCc7XG5cbmV4cG9ydCBkZWZhdWx0IChub2RlOiBNb2NrZWREZWJ1Z05vZGUpOiBNb2NrZWREZWJ1Z05vZGVbXSA9PiB7XG4gIGNvbnN0IGVsRGVmID0gZWxEZWZHZXROb2RlKG5vZGUpO1xuICBpZiAoIWVsRGVmIHx8IGRldGVjdFRleHROb2RlKG5vZGUpKSB7XG4gICAgcmV0dXJuIFtdO1xuICB9XG5cbiAgY29uc3QgaXNEaXJlY3QgPSAobm9kZSBhcyBhbnkpLmNoaWxkTm9kZXMgIT09IHVuZGVmaW5lZDtcbiAgY29uc3QgY2hpbGRyZW46IE1vY2tlZERlYnVnTm9kZVtdID0gW107XG4gIGZvciAoY29uc3QgY2hpbGROb2RlIG9mIChub2RlIGFzIGFueSkuY2hpbGROb2RlcyB8fCBub2RlLnBhcmVudD8uY2hpbGROb2RlcyB8fCBbXSkge1xuICAgIGNvbnN0IGNoaWxkTm9kZVBhcmVudCA9IGVsRGVmR2V0UGFyZW50KGNoaWxkTm9kZSk7XG5cbiAgICBpZiAoIWlzRGlyZWN0ICYmICFlbERlZkNvbXBhcmUoZWxEZWYsIGNoaWxkTm9kZVBhcmVudCkpIHtcbiAgICAgIGNvbnRpbnVlO1xuICAgIH1cbiAgICBpZiAoY2hpbGROb2RlUGFyZW50ICYmICFlbERlZkNvbXBhcmUoZWxEZWYsIGNoaWxkTm9kZVBhcmVudCkpIHtcbiAgICAgIGNvbnRpbnVlO1xuICAgIH1cblxuICAgIGNoaWxkcmVuLnB1c2goY2hpbGROb2RlKTtcbiAgfVxuXG4gIHJldHVybiBjaGlsZHJlbjtcbn07XG4iXX0=