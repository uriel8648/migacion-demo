"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
var nested_check_children_1 = __importDefault(require("../crawl/nested-check-children"));
var handle_array_1 = __importDefault(require("./handle-array"));
var is_debug_node_1 = __importDefault(require("./is-debug-node"));
var is_fixture_1 = __importDefault(require("./is-fixture"));
exports.default = (function (handlePrimitives) {
    return function (html, outer) {
        if (outer === void 0) { outer = false; }
        var format = function (value, innerOuter) {
            if (innerOuter === void 0) { innerOuter = false; }
            if (Array.isArray(value)) {
                return (0, handle_array_1.default)(format, value);
            }
            if ((0, is_fixture_1.default)(value)) {
                return format(value.debugElement, outer);
            }
            var result = handlePrimitives(format, value, innerOuter);
            if (result !== undefined) {
                return result;
            }
            if ((0, is_debug_node_1.default)(value) && value.nativeNode.nodeName === '#comment') {
                return format((0, nested_check_children_1.default)(value), true);
            }
            return (0, is_debug_node_1.default)(value) ? format(value.nativeNode, innerOuter) : '';
        };
        return Array.isArray(html) ? html.map(function (item) { return format(item, outer); }) : format(html, outer);
    };
});
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZm9ybWF0LWhhbmRsZXIuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi8uLi8uLi9saWJzL25nLW1vY2tzL3NyYy9saWIvbW9jay1oZWxwZXIvZm9ybWF0L2Zvcm1hdC1oYW5kbGVyLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7O0FBQUEseUZBQWlFO0FBRWpFLGdFQUF5QztBQUN6QyxrRUFBMEM7QUFDMUMsNERBQXFDO0FBR3JDLG1CQUFlLFVBQUMsZ0JBQXFCO0lBQ25DLE9BQUEsVUFBQyxJQUFTLEVBQUUsS0FBYTtRQUFiLHNCQUFBLEVBQUEsYUFBYTtRQUN2QixJQUFNLE1BQU0sR0FBRyxVQUFDLEtBQWtELEVBQUUsVUFBa0I7WUFBbEIsMkJBQUEsRUFBQSxrQkFBa0I7WUFDcEYsSUFBSSxLQUFLLENBQUMsT0FBTyxDQUFDLEtBQUssQ0FBQyxFQUFFO2dCQUN4QixPQUFPLElBQUEsc0JBQVcsRUFBQyxNQUFNLEVBQUUsS0FBSyxDQUFDLENBQUM7YUFDbkM7WUFDRCxJQUFJLElBQUEsb0JBQVMsRUFBQyxLQUFLLENBQUMsRUFBRTtnQkFDcEIsT0FBTyxNQUFNLENBQUMsS0FBSyxDQUFDLFlBQVksRUFBRSxLQUFLLENBQUMsQ0FBQzthQUMxQztZQUNELElBQU0sTUFBTSxHQUFHLGdCQUFnQixDQUFDLE1BQU0sRUFBRSxLQUFLLEVBQUUsVUFBVSxDQUFDLENBQUM7WUFDM0QsSUFBSSxNQUFNLEtBQUssU0FBUyxFQUFFO2dCQUN4QixPQUFPLE1BQU0sQ0FBQzthQUNmO1lBRUQsSUFBSSxJQUFBLHVCQUFXLEVBQUMsS0FBSyxDQUFDLElBQUksS0FBSyxDQUFDLFVBQVUsQ0FBQyxRQUFRLEtBQUssVUFBVSxFQUFFO2dCQUNsRSxPQUFPLE1BQU0sQ0FBQyxJQUFBLCtCQUFtQixFQUFDLEtBQUssQ0FBQyxFQUFFLElBQUksQ0FBQyxDQUFDO2FBQ2pEO1lBRUQsT0FBTyxJQUFBLHVCQUFXLEVBQUMsS0FBSyxDQUFDLENBQUMsQ0FBQyxDQUFDLE1BQU0sQ0FBQyxLQUFLLENBQUMsVUFBVSxFQUFFLFVBQVUsQ0FBQyxDQUFDLENBQUMsQ0FBQyxFQUFFLENBQUM7UUFDeEUsQ0FBQyxDQUFDO1FBRUYsT0FBTyxLQUFLLENBQUMsT0FBTyxDQUFDLElBQUksQ0FBQyxDQUFDLENBQUMsQ0FBQyxJQUFJLENBQUMsR0FBRyxDQUFDLFVBQUMsSUFBUyxJQUFLLE9BQUEsTUFBTSxDQUFDLElBQUksRUFBRSxLQUFLLENBQUMsRUFBbkIsQ0FBbUIsQ0FBQyxDQUFDLENBQUMsQ0FBQyxNQUFNLENBQUMsSUFBSSxFQUFFLEtBQUssQ0FBQyxDQUFDO0lBQ2xHLENBQUM7QUFyQkQsQ0FxQkMsRUFBQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBuZXN0ZWRDaGVja0NoaWxkcmVuIGZyb20gJy4uL2NyYXdsL25lc3RlZC1jaGVjay1jaGlsZHJlbic7XG5cbmltcG9ydCBoYW5kbGVBcnJheSBmcm9tICcuL2hhbmRsZS1hcnJheSc7XG5pbXBvcnQgaXNEZWJ1Z05vZGUgZnJvbSAnLi9pcy1kZWJ1Zy1ub2RlJztcbmltcG9ydCBpc0ZpeHR1cmUgZnJvbSAnLi9pcy1maXh0dXJlJztcbmltcG9ydCB7IEZPUk1BVF9TRVQsIEZPUk1BVF9TSU5HTEUgfSBmcm9tICcuL3R5cGVzJztcblxuZXhwb3J0IGRlZmF1bHQgKGhhbmRsZVByaW1pdGl2ZXM6IGFueSkgPT5cbiAgKGh0bWw6IGFueSwgb3V0ZXIgPSBmYWxzZSkgPT4ge1xuICAgIGNvbnN0IGZvcm1hdCA9ICh2YWx1ZTogVGV4dCB8IENvbW1lbnQgfCBGT1JNQVRfU0lOR0xFIHwgRk9STUFUX1NFVCwgaW5uZXJPdXRlciA9IGZhbHNlKTogYW55ID0+IHtcbiAgICAgIGlmIChBcnJheS5pc0FycmF5KHZhbHVlKSkge1xuICAgICAgICByZXR1cm4gaGFuZGxlQXJyYXkoZm9ybWF0LCB2YWx1ZSk7XG4gICAgICB9XG4gICAgICBpZiAoaXNGaXh0dXJlKHZhbHVlKSkge1xuICAgICAgICByZXR1cm4gZm9ybWF0KHZhbHVlLmRlYnVnRWxlbWVudCwgb3V0ZXIpO1xuICAgICAgfVxuICAgICAgY29uc3QgcmVzdWx0ID0gaGFuZGxlUHJpbWl0aXZlcyhmb3JtYXQsIHZhbHVlLCBpbm5lck91dGVyKTtcbiAgICAgIGlmIChyZXN1bHQgIT09IHVuZGVmaW5lZCkge1xuICAgICAgICByZXR1cm4gcmVzdWx0O1xuICAgICAgfVxuXG4gICAgICBpZiAoaXNEZWJ1Z05vZGUodmFsdWUpICYmIHZhbHVlLm5hdGl2ZU5vZGUubm9kZU5hbWUgPT09ICcjY29tbWVudCcpIHtcbiAgICAgICAgcmV0dXJuIGZvcm1hdChuZXN0ZWRDaGVja0NoaWxkcmVuKHZhbHVlKSwgdHJ1ZSk7XG4gICAgICB9XG5cbiAgICAgIHJldHVybiBpc0RlYnVnTm9kZSh2YWx1ZSkgPyBmb3JtYXQodmFsdWUubmF0aXZlTm9kZSwgaW5uZXJPdXRlcikgOiAnJztcbiAgICB9O1xuXG4gICAgcmV0dXJuIEFycmF5LmlzQXJyYXkoaHRtbCkgPyBodG1sLm1hcCgoaXRlbTogYW55KSA9PiBmb3JtYXQoaXRlbSwgb3V0ZXIpKSA6IGZvcm1hdChodG1sLCBvdXRlcik7XG4gIH07XG4iXX0=