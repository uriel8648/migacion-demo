"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
var format_handler_1 = __importDefault(require("./format-handler"));
var handle_text_1 = __importDefault(require("./handle-text"));
var is_html_element_1 = __importDefault(require("./is-html-element"));
var is_text_1 = __importDefault(require("./is-text"));
var normalizeValue = function (html) {
    return html
        ? html // lgtm [js/incomplete-multi-character-sanitization]
            .replace(new RegExp('\\s+', 'mg'), ' ')
            .replace(new RegExp('<!--.*?-->', 'mg'), '')
            .replace(new RegExp('\\s+', 'mg'), ' ')
            .replace(new RegExp('>\\s+<', 'mg'), '><')
        : '';
};
var normalizeText = function (text) {
    return text
        .replace(new RegExp('&', 'mg'), '&amp;')
        .replace(new RegExp('"', 'mg'), '&quot;')
        .replace(new RegExp('<', 'mg'), '&lt;')
        .replace(new RegExp('>', 'mg'), '&gt;')
        // tslint:disable-next-line quotemark
        .replace(new RegExp("'", 'mg'), '&#39;');
};
var getElementValue = function (element, outer) {
    return outer ? element.outerHTML : element.innerHTML;
};
var handlePrimitives = function (format, value, outer) {
    if (typeof value === 'string' || value === undefined) {
        var result = normalizeValue(value);
        return outer ? result : result.trim();
    }
    if ((0, is_html_element_1.default)(value)) {
        return format(getElementValue(value, outer));
    }
    if ((0, is_text_1.default)(value)) {
        return handlePrimitives(format, normalizeText((0, handle_text_1.default)(value)), outer);
    }
    return undefined;
};
exports.default = (function () { return (0, format_handler_1.default)(handlePrimitives); })();
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibW9jay1oZWxwZXIuZm9ybWF0LWh0bWwuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi8uLi8uLi9saWJzL25nLW1vY2tzL3NyYy9saWIvbW9jay1oZWxwZXIvZm9ybWF0L21vY2staGVscGVyLmZvcm1hdC1odG1sLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7O0FBQUEsb0VBQTZDO0FBQzdDLDhEQUF1QztBQUN2QyxzRUFBOEM7QUFDOUMsc0RBQStCO0FBRS9CLElBQU0sY0FBYyxHQUFHLFVBQUMsSUFBd0I7SUFDOUMsT0FBQSxJQUFJO1FBQ0YsQ0FBQyxDQUFDLElBQUksQ0FBQyxvREFBb0Q7YUFDdEQsT0FBTyxDQUFDLElBQUksTUFBTSxDQUFDLE1BQU0sRUFBRSxJQUFJLENBQUMsRUFBRSxHQUFHLENBQUM7YUFDdEMsT0FBTyxDQUFDLElBQUksTUFBTSxDQUFDLFlBQVksRUFBRSxJQUFJLENBQUMsRUFBRSxFQUFFLENBQUM7YUFDM0MsT0FBTyxDQUFDLElBQUksTUFBTSxDQUFDLE1BQU0sRUFBRSxJQUFJLENBQUMsRUFBRSxHQUFHLENBQUM7YUFDdEMsT0FBTyxDQUFDLElBQUksTUFBTSxDQUFDLFFBQVEsRUFBRSxJQUFJLENBQUMsRUFBRSxJQUFJLENBQUM7UUFDOUMsQ0FBQyxDQUFDLEVBQUU7QUFOTixDQU1NLENBQUM7QUFFVCxJQUFNLGFBQWEsR0FBRyxVQUFDLElBQVk7SUFDakMsT0FBQSxJQUFJO1NBQ0QsT0FBTyxDQUFDLElBQUksTUFBTSxDQUFDLEdBQUcsRUFBRSxJQUFJLENBQUMsRUFBRSxPQUFPLENBQUM7U0FDdkMsT0FBTyxDQUFDLElBQUksTUFBTSxDQUFDLEdBQUcsRUFBRSxJQUFJLENBQUMsRUFBRSxRQUFRLENBQUM7U0FDeEMsT0FBTyxDQUFDLElBQUksTUFBTSxDQUFDLEdBQUcsRUFBRSxJQUFJLENBQUMsRUFBRSxNQUFNLENBQUM7U0FDdEMsT0FBTyxDQUFDLElBQUksTUFBTSxDQUFDLEdBQUcsRUFBRSxJQUFJLENBQUMsRUFBRSxNQUFNLENBQUM7UUFDdkMscUNBQXFDO1NBQ3BDLE9BQU8sQ0FBQyxJQUFJLE1BQU0sQ0FBQyxHQUFHLEVBQUUsSUFBSSxDQUFDLEVBQUUsT0FBTyxDQUFDO0FBTjFDLENBTTBDLENBQUM7QUFFN0MsSUFBTSxlQUFlLEdBQUcsVUFBQyxPQUFvQixFQUFFLEtBQWM7SUFDM0QsT0FBQSxLQUFLLENBQUMsQ0FBQyxDQUFDLE9BQU8sQ0FBQyxTQUFTLENBQUMsQ0FBQyxDQUFDLE9BQU8sQ0FBQyxTQUFTO0FBQTdDLENBQTZDLENBQUM7QUFFaEQsSUFBTSxnQkFBZ0IsR0FBRyxVQUFDLE1BQVcsRUFBRSxLQUFVLEVBQUUsS0FBYztJQUMvRCxJQUFJLE9BQU8sS0FBSyxLQUFLLFFBQVEsSUFBSSxLQUFLLEtBQUssU0FBUyxFQUFFO1FBQ3BELElBQU0sTUFBTSxHQUFHLGNBQWMsQ0FBQyxLQUFLLENBQUMsQ0FBQztRQUVyQyxPQUFPLEtBQUssQ0FBQyxDQUFDLENBQUMsTUFBTSxDQUFDLENBQUMsQ0FBQyxNQUFNLENBQUMsSUFBSSxFQUFFLENBQUM7S0FDdkM7SUFDRCxJQUFJLElBQUEseUJBQWEsRUFBQyxLQUFLLENBQUMsRUFBRTtRQUN4QixPQUFPLE1BQU0sQ0FBQyxlQUFlLENBQUMsS0FBSyxFQUFFLEtBQUssQ0FBQyxDQUFDLENBQUM7S0FDOUM7SUFDRCxJQUFJLElBQUEsaUJBQU0sRUFBQyxLQUFLLENBQUMsRUFBRTtRQUNqQixPQUFPLGdCQUFnQixDQUFDLE1BQU0sRUFBRSxhQUFhLENBQUMsSUFBQSxxQkFBVSxFQUFDLEtBQUssQ0FBQyxDQUFDLEVBQUUsS0FBSyxDQUFDLENBQUM7S0FDMUU7SUFFRCxPQUFPLFNBQVMsQ0FBQztBQUNuQixDQUFDLENBQUM7QUFFRixrQkFBZSxDQUFDLGNBQU0sT0FBQSxJQUFBLHdCQUFhLEVBQUMsZ0JBQWdCLENBQUMsRUFBL0IsQ0FBK0IsQ0FBQyxFQUFFLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgZm9ybWF0SGFuZGxlciBmcm9tICcuL2Zvcm1hdC1oYW5kbGVyJztcbmltcG9ydCBoYW5kbGVUZXh0IGZyb20gJy4vaGFuZGxlLXRleHQnO1xuaW1wb3J0IGlzSHRtbEVsZW1lbnQgZnJvbSAnLi9pcy1odG1sLWVsZW1lbnQnO1xuaW1wb3J0IGlzVGV4dCBmcm9tICcuL2lzLXRleHQnO1xuXG5jb25zdCBub3JtYWxpemVWYWx1ZSA9IChodG1sOiBzdHJpbmcgfCB1bmRlZmluZWQpOiBzdHJpbmcgPT5cbiAgaHRtbFxuICAgID8gaHRtbCAvLyBsZ3RtIFtqcy9pbmNvbXBsZXRlLW11bHRpLWNoYXJhY3Rlci1zYW5pdGl6YXRpb25dXG4gICAgICAgIC5yZXBsYWNlKG5ldyBSZWdFeHAoJ1xcXFxzKycsICdtZycpLCAnICcpXG4gICAgICAgIC5yZXBsYWNlKG5ldyBSZWdFeHAoJzwhLS0uKj8tLT4nLCAnbWcnKSwgJycpXG4gICAgICAgIC5yZXBsYWNlKG5ldyBSZWdFeHAoJ1xcXFxzKycsICdtZycpLCAnICcpXG4gICAgICAgIC5yZXBsYWNlKG5ldyBSZWdFeHAoJz5cXFxccys8JywgJ21nJyksICc+PCcpXG4gICAgOiAnJztcblxuY29uc3Qgbm9ybWFsaXplVGV4dCA9ICh0ZXh0OiBzdHJpbmcpOiBzdHJpbmcgPT5cbiAgdGV4dFxuICAgIC5yZXBsYWNlKG5ldyBSZWdFeHAoJyYnLCAnbWcnKSwgJyZhbXA7JylcbiAgICAucmVwbGFjZShuZXcgUmVnRXhwKCdcIicsICdtZycpLCAnJnF1b3Q7JylcbiAgICAucmVwbGFjZShuZXcgUmVnRXhwKCc8JywgJ21nJyksICcmbHQ7JylcbiAgICAucmVwbGFjZShuZXcgUmVnRXhwKCc+JywgJ21nJyksICcmZ3Q7JylcbiAgICAvLyB0c2xpbnQ6ZGlzYWJsZS1uZXh0LWxpbmUgcXVvdGVtYXJrXG4gICAgLnJlcGxhY2UobmV3IFJlZ0V4cChcIidcIiwgJ21nJyksICcmIzM5OycpO1xuXG5jb25zdCBnZXRFbGVtZW50VmFsdWUgPSAoZWxlbWVudDogSFRNTEVsZW1lbnQsIG91dGVyOiBib29sZWFuKTogc3RyaW5nID0+XG4gIG91dGVyID8gZWxlbWVudC5vdXRlckhUTUwgOiBlbGVtZW50LmlubmVySFRNTDtcblxuY29uc3QgaGFuZGxlUHJpbWl0aXZlcyA9IChmb3JtYXQ6IGFueSwgdmFsdWU6IGFueSwgb3V0ZXI6IGJvb2xlYW4pOiBzdHJpbmcgfCB1bmRlZmluZWQgPT4ge1xuICBpZiAodHlwZW9mIHZhbHVlID09PSAnc3RyaW5nJyB8fCB2YWx1ZSA9PT0gdW5kZWZpbmVkKSB7XG4gICAgY29uc3QgcmVzdWx0ID0gbm9ybWFsaXplVmFsdWUodmFsdWUpO1xuXG4gICAgcmV0dXJuIG91dGVyID8gcmVzdWx0IDogcmVzdWx0LnRyaW0oKTtcbiAgfVxuICBpZiAoaXNIdG1sRWxlbWVudCh2YWx1ZSkpIHtcbiAgICByZXR1cm4gZm9ybWF0KGdldEVsZW1lbnRWYWx1ZSh2YWx1ZSwgb3V0ZXIpKTtcbiAgfVxuICBpZiAoaXNUZXh0KHZhbHVlKSkge1xuICAgIHJldHVybiBoYW5kbGVQcmltaXRpdmVzKGZvcm1hdCwgbm9ybWFsaXplVGV4dChoYW5kbGVUZXh0KHZhbHVlKSksIG91dGVyKTtcbiAgfVxuXG4gIHJldHVybiB1bmRlZmluZWQ7XG59O1xuXG5leHBvcnQgZGVmYXVsdCAoKCkgPT4gZm9ybWF0SGFuZGxlcihoYW5kbGVQcmltaXRpdmVzKSkoKTtcbiJdfQ==