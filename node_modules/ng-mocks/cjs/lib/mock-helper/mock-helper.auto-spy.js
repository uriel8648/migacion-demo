"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var helper_mock_service_1 = require("../mock-service/helper.mock-service");
var calls = [];
exports.default = (function (type) {
    if (type === 'reset') {
        calls.pop();
    }
    else {
        calls.push(type);
    }
    var action = calls[calls.length - 1];
    if (action === 'jasmine') {
        return (0, helper_mock_service_1.registerMockFunction)(function (mockName) { return jasmine.createSpy(mockName); });
    }
    // istanbul ignore if: because it is run with jasmine
    if (action === 'jest') {
        return (0, helper_mock_service_1.registerMockFunction)(function (name) { return jest.fn().mockName(name); });
    }
    if (!action || action === 'default' || action === 'reset') {
        return (0, helper_mock_service_1.registerMockFunction)();
    }
    return (0, helper_mock_service_1.registerMockFunction)(action);
});
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibW9jay1oZWxwZXIuYXV0by1zcHkuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi8uLi9saWJzL25nLW1vY2tzL3NyYy9saWIvbW9jay1oZWxwZXIvbW9jay1oZWxwZXIuYXV0by1zcHkudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7QUFBQSwyRUFBMkU7QUFLM0UsSUFBTSxLQUFLLEdBQVksRUFBRSxDQUFDO0FBRTFCLG1CQUFlLFVBQUMsSUFBVztJQUN6QixJQUFJLElBQUksS0FBSyxPQUFPLEVBQUU7UUFDcEIsS0FBSyxDQUFDLEdBQUcsRUFBRSxDQUFDO0tBQ2I7U0FBTTtRQUNMLEtBQUssQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDLENBQUM7S0FDbEI7SUFDRCxJQUFNLE1BQU0sR0FBc0IsS0FBSyxDQUFDLEtBQUssQ0FBQyxNQUFNLEdBQUcsQ0FBQyxDQUFDLENBQUM7SUFFMUQsSUFBSSxNQUFNLEtBQUssU0FBUyxFQUFFO1FBQ3hCLE9BQU8sSUFBQSwwQ0FBb0IsRUFBQyxVQUFBLFFBQVEsSUFBSSxPQUFBLE9BQU8sQ0FBQyxTQUFTLENBQUMsUUFBUSxDQUFDLEVBQTNCLENBQTJCLENBQUMsQ0FBQztLQUN0RTtJQUNELHFEQUFxRDtJQUNyRCxJQUFJLE1BQU0sS0FBSyxNQUFNLEVBQUU7UUFDckIsT0FBTyxJQUFBLDBDQUFvQixFQUFDLFVBQUEsSUFBSSxJQUFJLE9BQUEsSUFBSSxDQUFDLEVBQUUsRUFBRSxDQUFDLFFBQVEsQ0FBQyxJQUFJLENBQUMsRUFBeEIsQ0FBd0IsQ0FBQyxDQUFDO0tBQy9EO0lBQ0QsSUFBSSxDQUFDLE1BQU0sSUFBSSxNQUFNLEtBQUssU0FBUyxJQUFJLE1BQU0sS0FBSyxPQUFPLEVBQUU7UUFDekQsT0FBTyxJQUFBLDBDQUFvQixHQUFFLENBQUM7S0FDL0I7SUFFRCxPQUFPLElBQUEsMENBQW9CLEVBQUMsTUFBTSxDQUFDLENBQUM7QUFDdEMsQ0FBQyxFQUFDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgcmVnaXN0ZXJNb2NrRnVuY3Rpb24gfSBmcm9tICcuLi9tb2NrLXNlcnZpY2UvaGVscGVyLm1vY2stc2VydmljZSc7XG5pbXBvcnQgeyBDdXN0b21Nb2NrRnVuY3Rpb24gfSBmcm9tICcuLi9tb2NrLXNlcnZpY2UvdHlwZXMnO1xuXG50eXBlIHBhcmFtID0gJ2phc21pbmUnIHwgJ2plc3QnIHwgJ2RlZmF1bHQnIHwgJ3Jlc2V0JyB8IEN1c3RvbU1vY2tGdW5jdGlvbjtcblxuY29uc3QgY2FsbHM6IHBhcmFtW10gPSBbXTtcblxuZXhwb3J0IGRlZmF1bHQgKHR5cGU6IHBhcmFtKSA9PiB7XG4gIGlmICh0eXBlID09PSAncmVzZXQnKSB7XG4gICAgY2FsbHMucG9wKCk7XG4gIH0gZWxzZSB7XG4gICAgY2FsbHMucHVzaCh0eXBlKTtcbiAgfVxuICBjb25zdCBhY3Rpb246IHBhcmFtIHwgdW5kZWZpbmVkID0gY2FsbHNbY2FsbHMubGVuZ3RoIC0gMV07XG5cbiAgaWYgKGFjdGlvbiA9PT0gJ2phc21pbmUnKSB7XG4gICAgcmV0dXJuIHJlZ2lzdGVyTW9ja0Z1bmN0aW9uKG1vY2tOYW1lID0+IGphc21pbmUuY3JlYXRlU3B5KG1vY2tOYW1lKSk7XG4gIH1cbiAgLy8gaXN0YW5idWwgaWdub3JlIGlmOiBiZWNhdXNlIGl0IGlzIHJ1biB3aXRoIGphc21pbmVcbiAgaWYgKGFjdGlvbiA9PT0gJ2plc3QnKSB7XG4gICAgcmV0dXJuIHJlZ2lzdGVyTW9ja0Z1bmN0aW9uKG5hbWUgPT4gamVzdC5mbigpLm1vY2tOYW1lKG5hbWUpKTtcbiAgfVxuICBpZiAoIWFjdGlvbiB8fCBhY3Rpb24gPT09ICdkZWZhdWx0JyB8fCBhY3Rpb24gPT09ICdyZXNldCcpIHtcbiAgICByZXR1cm4gcmVnaXN0ZXJNb2NrRnVuY3Rpb24oKTtcbiAgfVxuXG4gIHJldHVybiByZWdpc3Rlck1vY2tGdW5jdGlvbihhY3Rpb24pO1xufTtcbiJdfQ==