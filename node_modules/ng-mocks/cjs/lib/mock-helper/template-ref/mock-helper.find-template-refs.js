"use strict";
var __read = (this && this.__read) || function (o, n) {
    var m = typeof Symbol === "function" && o[Symbol.iterator];
    if (!m) return o;
    var i = m.call(o), r, ar = [], e;
    try {
        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);
    }
    catch (error) { e = { error: error }; }
    finally {
        try {
            if (r && !r.done && (m = i["return"])) m.call(i);
        }
        finally { if (e) throw e.error; }
    }
    return ar;
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
var nested_check_1 = __importDefault(require("../crawl/nested-check"));
var mock_helper_find_1 = __importDefault(require("../find/mock-helper.find"));
var func_get_last_fixture_1 = __importDefault(require("../func.get-last-fixture"));
var func_parse_find_args_1 = __importDefault(require("../func.parse-find-args"));
var detect_crawler_1 = __importDefault(require("./detect-crawler"));
var detect_template_ref_1 = __importDefault(require("./detect-template-ref"));
var func_is_valid_template_ref_selector_1 = __importDefault(require("./func.is-valid-template-ref-selector"));
exports.default = (function () {
    var args = [];
    for (var _i = 0; _i < arguments.length; _i++) {
        args[_i] = arguments[_i];
    }
    var _a = __read((0, func_parse_find_args_1.default)(args, func_is_valid_template_ref_selector_1.default), 2), el = _a[0], sel = _a[1];
    var result = [];
    var detector = (0, detect_crawler_1.default)(sel);
    (0, nested_check_1.default)((0, mock_helper_find_1.default)((0, func_get_last_fixture_1.default)(), el, undefined), undefined, (0, detect_template_ref_1.default)(result, detector));
    return result;
});
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibW9jay1oZWxwZXIuZmluZC10ZW1wbGF0ZS1yZWZzLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vLi4vLi4vbGlicy9uZy1tb2Nrcy9zcmMvbGliL21vY2staGVscGVyL3RlbXBsYXRlLXJlZi9tb2NrLWhlbHBlci5maW5kLXRlbXBsYXRlLXJlZnMudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBRUEsdUVBQWdEO0FBQ2hELDhFQUFzRDtBQUN0RCxtRkFBMEQ7QUFDMUQsaUZBQXdEO0FBRXhELG9FQUE2QztBQUM3Qyw4RUFBc0Q7QUFDdEQsOEdBQW1GO0FBRW5GLG1CQUFlO0lBQUMsY0FBYztTQUFkLFVBQWMsRUFBZCxxQkFBYyxFQUFkLElBQWM7UUFBZCx5QkFBYzs7SUFDdEIsSUFBQSxLQUFBLE9BQVksSUFBQSw4QkFBaUIsRUFBQyxJQUFJLEVBQUUsNkNBQThCLENBQUMsSUFBQSxFQUFsRSxFQUFFLFFBQUEsRUFBRSxHQUFHLFFBQTJELENBQUM7SUFFMUUsSUFBTSxNQUFNLEdBQTRCLEVBQUUsQ0FBQztJQUMzQyxJQUFNLFFBQVEsR0FBRyxJQUFBLHdCQUFhLEVBQUMsR0FBRyxDQUFDLENBQUM7SUFDcEMsSUFBQSxzQkFBVyxFQUFDLElBQUEsMEJBQWMsRUFBQyxJQUFBLCtCQUFrQixHQUFFLEVBQUUsRUFBRSxFQUFFLFNBQVMsQ0FBQyxFQUFFLFNBQVMsRUFBRSxJQUFBLDZCQUFpQixFQUFDLE1BQU0sRUFBRSxRQUFRLENBQUMsQ0FBQyxDQUFDO0lBRWpILE9BQU8sTUFBTSxDQUFDO0FBQ2hCLENBQUMsRUFBQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IFRlbXBsYXRlUmVmIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5cbmltcG9ydCBuZXN0ZWRDaGVjayBmcm9tICcuLi9jcmF3bC9uZXN0ZWQtY2hlY2snO1xuaW1wb3J0IG1vY2tIZWxwZXJGaW5kIGZyb20gJy4uL2ZpbmQvbW9jay1oZWxwZXIuZmluZCc7XG5pbXBvcnQgZnVuY0dldExhc3RGaXh0dXJlIGZyb20gJy4uL2Z1bmMuZ2V0LWxhc3QtZml4dHVyZSc7XG5pbXBvcnQgZnVuY1BhcnNlRmluZEFyZ3MgZnJvbSAnLi4vZnVuYy5wYXJzZS1maW5kLWFyZ3MnO1xuXG5pbXBvcnQgZGV0ZWN0Q3Jhd2xlciBmcm9tICcuL2RldGVjdC1jcmF3bGVyJztcbmltcG9ydCBkZXRlY3RUZW1wbGF0ZVJlZiBmcm9tICcuL2RldGVjdC10ZW1wbGF0ZS1yZWYnO1xuaW1wb3J0IGZ1bmNJc1ZhbGlkVGVtcGxhdGVSZWZTZWxlY3RvciBmcm9tICcuL2Z1bmMuaXMtdmFsaWQtdGVtcGxhdGUtcmVmLXNlbGVjdG9yJztcblxuZXhwb3J0IGRlZmF1bHQgKC4uLmFyZ3M6IGFueVtdKTogQXJyYXk8VGVtcGxhdGVSZWY8YW55Pj4gPT4ge1xuICBjb25zdCBbZWwsIHNlbF0gPSBmdW5jUGFyc2VGaW5kQXJncyhhcmdzLCBmdW5jSXNWYWxpZFRlbXBsYXRlUmVmU2VsZWN0b3IpO1xuXG4gIGNvbnN0IHJlc3VsdDogQXJyYXk8VGVtcGxhdGVSZWY8YW55Pj4gPSBbXTtcbiAgY29uc3QgZGV0ZWN0b3IgPSBkZXRlY3RDcmF3bGVyKHNlbCk7XG4gIG5lc3RlZENoZWNrKG1vY2tIZWxwZXJGaW5kKGZ1bmNHZXRMYXN0Rml4dHVyZSgpLCBlbCwgdW5kZWZpbmVkKSwgdW5kZWZpbmVkLCBkZXRlY3RUZW1wbGF0ZVJlZihyZXN1bHQsIGRldGVjdG9yKSk7XG5cbiAgcmV0dXJuIHJlc3VsdDtcbn07XG4iXX0=