"use strict";
var __read = (this && this.__read) || function (o, n) {
    var m = typeof Symbol === "function" && o[Symbol.iterator];
    if (!m) return o;
    var i = m.call(o), r, ar = [], e;
    try {
        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);
    }
    catch (error) { e = { error: error }; }
    finally {
        try {
            if (r && !r.done && (m = i["return"])) m.call(i);
        }
        finally { if (e) throw e.error; }
    }
    return ar;
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
var func_get_source_of_mock_1 = require("../../common/func.get-source-of-mock");
var mock_helper_crawl_1 = __importDefault(require("../crawl/mock-helper.crawl"));
var mock_helper_find_1 = __importDefault(require("../find/mock-helper.find"));
var func_get_from_node_1 = __importDefault(require("../func.get-from-node"));
var func_get_last_fixture_1 = __importDefault(require("../func.get-last-fixture"));
var func_parse_find_args_1 = __importDefault(require("../func.parse-find-args"));
var func_parse_find_args_name_1 = __importDefault(require("../func.parse-find-args-name"));
var func_is_valid_find_instance_selector_1 = __importDefault(require("./func.is-valid-find-instance-selector"));
var defaultNotFoundValue = {}; // simulating Symbol
exports.default = (function () {
    var args = [];
    for (var _i = 0; _i < arguments.length; _i++) {
        args[_i] = arguments[_i];
    }
    var _a = __read((0, func_parse_find_args_1.default)(args, func_is_valid_find_instance_selector_1.default, defaultNotFoundValue), 3), el = _a[0], sel = _a[1], notFoundValue = _a[2];
    if (typeof sel !== 'function') {
        throw new Error('Only classes are accepted');
    }
    var declaration = (0, func_get_source_of_mock_1.getSourceOfMock)(sel);
    var result = [];
    (0, mock_helper_crawl_1.default)((0, mock_helper_find_1.default)((0, func_get_last_fixture_1.default)(), el, undefined), function (node) {
        (0, func_get_from_node_1.default)(result, node, declaration);
        return result.length > 0;
    }, true);
    if (result.length) {
        return result[0];
    }
    if (notFoundValue !== defaultNotFoundValue) {
        return notFoundValue;
    }
    throw new Error("Cannot find an instance via ngMocks.findInstance(" + (0, func_parse_find_args_name_1.default)(sel) + ")");
});
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibW9jay1oZWxwZXIuZmluZC1pbnN0YW5jZS5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uLy4uLy4uL2xpYnMvbmctbW9ja3Mvc3JjL2xpYi9tb2NrLWhlbHBlci9maW5kLWluc3RhbmNlL21vY2staGVscGVyLmZpbmQtaW5zdGFuY2UudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBQUEsZ0ZBQXVFO0FBQ3ZFLGlGQUF5RDtBQUN6RCw4RUFBc0Q7QUFDdEQsNkVBQW9EO0FBQ3BELG1GQUEwRDtBQUMxRCxpRkFBd0Q7QUFDeEQsMkZBQWlFO0FBRWpFLGdIQUFxRjtBQUVyRixJQUFNLG9CQUFvQixHQUFHLEVBQUUsQ0FBQyxDQUFDLG9CQUFvQjtBQUVyRCxtQkFBZTtJQUFDLGNBQWM7U0FBZCxVQUFjLEVBQWQscUJBQWMsRUFBZCxJQUFjO1FBQWQseUJBQWM7O0lBQ3RCLElBQUEsS0FBQSxPQUEyQixJQUFBLDhCQUFpQixFQUFDLElBQUksRUFBRSw4Q0FBK0IsRUFBRSxvQkFBb0IsQ0FBQyxJQUFBLEVBQXhHLEVBQUUsUUFBQSxFQUFFLEdBQUcsUUFBQSxFQUFFLGFBQWEsUUFBa0YsQ0FBQztJQUNoSCxJQUFJLE9BQU8sR0FBRyxLQUFLLFVBQVUsRUFBRTtRQUM3QixNQUFNLElBQUksS0FBSyxDQUFDLDJCQUEyQixDQUFDLENBQUM7S0FDOUM7SUFFRCxJQUFNLFdBQVcsR0FBRyxJQUFBLHlDQUFlLEVBQUMsR0FBRyxDQUFDLENBQUM7SUFDekMsSUFBTSxNQUFNLEdBQVUsRUFBRSxDQUFDO0lBQ3pCLElBQUEsMkJBQWUsRUFDYixJQUFBLDBCQUFjLEVBQUMsSUFBQSwrQkFBa0IsR0FBRSxFQUFFLEVBQUUsRUFBRSxTQUFTLENBQUMsRUFDbkQsVUFBQSxJQUFJO1FBQ0YsSUFBQSw0QkFBZSxFQUFDLE1BQU0sRUFBRSxJQUFJLEVBQUUsV0FBVyxDQUFDLENBQUM7UUFFM0MsT0FBTyxNQUFNLENBQUMsTUFBTSxHQUFHLENBQUMsQ0FBQztJQUMzQixDQUFDLEVBQ0QsSUFBSSxDQUNMLENBQUM7SUFDRixJQUFJLE1BQU0sQ0FBQyxNQUFNLEVBQUU7UUFDakIsT0FBTyxNQUFNLENBQUMsQ0FBQyxDQUFDLENBQUM7S0FDbEI7SUFDRCxJQUFJLGFBQWEsS0FBSyxvQkFBb0IsRUFBRTtRQUMxQyxPQUFPLGFBQWEsQ0FBQztLQUN0QjtJQUNELE1BQU0sSUFBSSxLQUFLLENBQUMsc0RBQW9ELElBQUEsbUNBQXFCLEVBQUMsR0FBRyxDQUFDLE1BQUcsQ0FBQyxDQUFDO0FBQ3JHLENBQUMsRUFBQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IGdldFNvdXJjZU9mTW9jayB9IGZyb20gJy4uLy4uL2NvbW1vbi9mdW5jLmdldC1zb3VyY2Utb2YtbW9jayc7XG5pbXBvcnQgbW9ja0hlbHBlckNyYXdsIGZyb20gJy4uL2NyYXdsL21vY2staGVscGVyLmNyYXdsJztcbmltcG9ydCBtb2NrSGVscGVyRmluZCBmcm9tICcuLi9maW5kL21vY2staGVscGVyLmZpbmQnO1xuaW1wb3J0IGZ1bmNHZXRGcm9tTm9kZSBmcm9tICcuLi9mdW5jLmdldC1mcm9tLW5vZGUnO1xuaW1wb3J0IGZ1bmNHZXRMYXN0Rml4dHVyZSBmcm9tICcuLi9mdW5jLmdldC1sYXN0LWZpeHR1cmUnO1xuaW1wb3J0IGZ1bmNQYXJzZUZpbmRBcmdzIGZyb20gJy4uL2Z1bmMucGFyc2UtZmluZC1hcmdzJztcbmltcG9ydCBmdW5jUGFyc2VGaW5kQXJnc05hbWUgZnJvbSAnLi4vZnVuYy5wYXJzZS1maW5kLWFyZ3MtbmFtZSc7XG5cbmltcG9ydCBmdW5jSXNWYWxpZEZpbmRJbnN0YW5jZVNlbGVjdG9yIGZyb20gJy4vZnVuYy5pcy12YWxpZC1maW5kLWluc3RhbmNlLXNlbGVjdG9yJztcblxuY29uc3QgZGVmYXVsdE5vdEZvdW5kVmFsdWUgPSB7fTsgLy8gc2ltdWxhdGluZyBTeW1ib2xcblxuZXhwb3J0IGRlZmF1bHQgKC4uLmFyZ3M6IGFueVtdKSA9PiB7XG4gIGNvbnN0IFtlbCwgc2VsLCBub3RGb3VuZFZhbHVlXSA9IGZ1bmNQYXJzZUZpbmRBcmdzKGFyZ3MsIGZ1bmNJc1ZhbGlkRmluZEluc3RhbmNlU2VsZWN0b3IsIGRlZmF1bHROb3RGb3VuZFZhbHVlKTtcbiAgaWYgKHR5cGVvZiBzZWwgIT09ICdmdW5jdGlvbicpIHtcbiAgICB0aHJvdyBuZXcgRXJyb3IoJ09ubHkgY2xhc3NlcyBhcmUgYWNjZXB0ZWQnKTtcbiAgfVxuXG4gIGNvbnN0IGRlY2xhcmF0aW9uID0gZ2V0U291cmNlT2ZNb2NrKHNlbCk7XG4gIGNvbnN0IHJlc3VsdDogYW55W10gPSBbXTtcbiAgbW9ja0hlbHBlckNyYXdsKFxuICAgIG1vY2tIZWxwZXJGaW5kKGZ1bmNHZXRMYXN0Rml4dHVyZSgpLCBlbCwgdW5kZWZpbmVkKSxcbiAgICBub2RlID0+IHtcbiAgICAgIGZ1bmNHZXRGcm9tTm9kZShyZXN1bHQsIG5vZGUsIGRlY2xhcmF0aW9uKTtcblxuICAgICAgcmV0dXJuIHJlc3VsdC5sZW5ndGggPiAwO1xuICAgIH0sXG4gICAgdHJ1ZSxcbiAgKTtcbiAgaWYgKHJlc3VsdC5sZW5ndGgpIHtcbiAgICByZXR1cm4gcmVzdWx0WzBdO1xuICB9XG4gIGlmIChub3RGb3VuZFZhbHVlICE9PSBkZWZhdWx0Tm90Rm91bmRWYWx1ZSkge1xuICAgIHJldHVybiBub3RGb3VuZFZhbHVlO1xuICB9XG4gIHRocm93IG5ldyBFcnJvcihgQ2Fubm90IGZpbmQgYW4gaW5zdGFuY2UgdmlhIG5nTW9ja3MuZmluZEluc3RhbmNlKCR7ZnVuY1BhcnNlRmluZEFyZ3NOYW1lKHNlbCl9KWApO1xufTtcbiJdfQ==