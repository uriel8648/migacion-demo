"use strict";
var __read = (this && this.__read) || function (o, n) {
    var m = typeof Symbol === "function" && o[Symbol.iterator];
    if (!m) return o;
    var i = m.call(o), r, ar = [], e;
    try {
        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);
    }
    catch (error) { e = { error: error }; }
    finally {
        try {
            if (r && !r.done && (m = i["return"])) m.call(i);
        }
        finally { if (e) throw e.error; }
    }
    return ar;
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
var func_get_source_of_mock_1 = require("../../common/func.get-source-of-mock");
var mock_helper_crawl_1 = __importDefault(require("../crawl/mock-helper.crawl"));
var mock_helper_find_1 = __importDefault(require("../find/mock-helper.find"));
var func_get_from_node_1 = __importDefault(require("../func.get-from-node"));
var func_get_last_fixture_1 = __importDefault(require("../func.get-last-fixture"));
var func_parse_find_args_1 = __importDefault(require("../func.parse-find-args"));
var func_is_valid_find_instance_selector_1 = __importDefault(require("./func.is-valid-find-instance-selector"));
exports.default = (function () {
    var args = [];
    for (var _i = 0; _i < arguments.length; _i++) {
        args[_i] = arguments[_i];
    }
    var _a = __read((0, func_parse_find_args_1.default)(args, func_is_valid_find_instance_selector_1.default), 2), el = _a[0], sel = _a[1];
    if (typeof sel !== 'function') {
        throw new Error('Only classes are accepted');
    }
    var declaration = (0, func_get_source_of_mock_1.getSourceOfMock)(sel);
    var result = [];
    (0, mock_helper_crawl_1.default)((0, mock_helper_find_1.default)((0, func_get_last_fixture_1.default)(), el, undefined), function (node) {
        (0, func_get_from_node_1.default)(result, node, declaration);
    }, true);
    return result;
});
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibW9jay1oZWxwZXIuZmluZC1pbnN0YW5jZXMuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi8uLi8uLi9saWJzL25nLW1vY2tzL3NyYy9saWIvbW9jay1oZWxwZXIvZmluZC1pbnN0YW5jZS9tb2NrLWhlbHBlci5maW5kLWluc3RhbmNlcy50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFBQSxnRkFBdUU7QUFDdkUsaUZBQXlEO0FBQ3pELDhFQUFzRDtBQUN0RCw2RUFBb0Q7QUFDcEQsbUZBQTBEO0FBQzFELGlGQUF3RDtBQUV4RCxnSEFBcUY7QUFFckYsbUJBQWU7SUFBSSxjQUFjO1NBQWQsVUFBYyxFQUFkLHFCQUFjLEVBQWQsSUFBYztRQUFkLHlCQUFjOztJQUN6QixJQUFBLEtBQUEsT0FBWSxJQUFBLDhCQUFpQixFQUFDLElBQUksRUFBRSw4Q0FBK0IsQ0FBQyxJQUFBLEVBQW5FLEVBQUUsUUFBQSxFQUFFLEdBQUcsUUFBNEQsQ0FBQztJQUMzRSxJQUFJLE9BQU8sR0FBRyxLQUFLLFVBQVUsRUFBRTtRQUM3QixNQUFNLElBQUksS0FBSyxDQUFDLDJCQUEyQixDQUFDLENBQUM7S0FDOUM7SUFFRCxJQUFNLFdBQVcsR0FBRyxJQUFBLHlDQUFlLEVBQUMsR0FBRyxDQUFDLENBQUM7SUFDekMsSUFBTSxNQUFNLEdBQVEsRUFBRSxDQUFDO0lBQ3ZCLElBQUEsMkJBQWUsRUFDYixJQUFBLDBCQUFjLEVBQUMsSUFBQSwrQkFBa0IsR0FBRSxFQUFFLEVBQUUsRUFBRSxTQUFTLENBQUMsRUFDbkQsVUFBQSxJQUFJO1FBQ0YsSUFBQSw0QkFBZSxFQUFDLE1BQU0sRUFBRSxJQUFJLEVBQUUsV0FBVyxDQUFDLENBQUM7SUFDN0MsQ0FBQyxFQUNELElBQUksQ0FDTCxDQUFDO0lBRUYsT0FBTyxNQUFNLENBQUM7QUFDaEIsQ0FBQyxFQUFDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgZ2V0U291cmNlT2ZNb2NrIH0gZnJvbSAnLi4vLi4vY29tbW9uL2Z1bmMuZ2V0LXNvdXJjZS1vZi1tb2NrJztcbmltcG9ydCBtb2NrSGVscGVyQ3Jhd2wgZnJvbSAnLi4vY3Jhd2wvbW9jay1oZWxwZXIuY3Jhd2wnO1xuaW1wb3J0IG1vY2tIZWxwZXJGaW5kIGZyb20gJy4uL2ZpbmQvbW9jay1oZWxwZXIuZmluZCc7XG5pbXBvcnQgZnVuY0dldEZyb21Ob2RlIGZyb20gJy4uL2Z1bmMuZ2V0LWZyb20tbm9kZSc7XG5pbXBvcnQgZnVuY0dldExhc3RGaXh0dXJlIGZyb20gJy4uL2Z1bmMuZ2V0LWxhc3QtZml4dHVyZSc7XG5pbXBvcnQgZnVuY1BhcnNlRmluZEFyZ3MgZnJvbSAnLi4vZnVuYy5wYXJzZS1maW5kLWFyZ3MnO1xuXG5pbXBvcnQgZnVuY0lzVmFsaWRGaW5kSW5zdGFuY2VTZWxlY3RvciBmcm9tICcuL2Z1bmMuaXMtdmFsaWQtZmluZC1pbnN0YW5jZS1zZWxlY3Rvcic7XG5cbmV4cG9ydCBkZWZhdWx0IDxUPiguLi5hcmdzOiBhbnlbXSk6IFRbXSA9PiB7XG4gIGNvbnN0IFtlbCwgc2VsXSA9IGZ1bmNQYXJzZUZpbmRBcmdzKGFyZ3MsIGZ1bmNJc1ZhbGlkRmluZEluc3RhbmNlU2VsZWN0b3IpO1xuICBpZiAodHlwZW9mIHNlbCAhPT0gJ2Z1bmN0aW9uJykge1xuICAgIHRocm93IG5ldyBFcnJvcignT25seSBjbGFzc2VzIGFyZSBhY2NlcHRlZCcpO1xuICB9XG5cbiAgY29uc3QgZGVjbGFyYXRpb24gPSBnZXRTb3VyY2VPZk1vY2soc2VsKTtcbiAgY29uc3QgcmVzdWx0OiBUW10gPSBbXTtcbiAgbW9ja0hlbHBlckNyYXdsKFxuICAgIG1vY2tIZWxwZXJGaW5kKGZ1bmNHZXRMYXN0Rml4dHVyZSgpLCBlbCwgdW5kZWZpbmVkKSxcbiAgICBub2RlID0+IHtcbiAgICAgIGZ1bmNHZXRGcm9tTm9kZShyZXN1bHQsIG5vZGUsIGRlY2xhcmF0aW9uKTtcbiAgICB9LFxuICAgIHRydWUsXG4gICk7XG5cbiAgcmV0dXJuIHJlc3VsdDtcbn07XG4iXX0=