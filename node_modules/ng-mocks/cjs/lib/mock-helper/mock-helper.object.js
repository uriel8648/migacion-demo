"use strict";
var __values = (this && this.__values) || function(o) {
    var s = typeof Symbol === "function" && Symbol.iterator, m = s && o[s], i = 0;
    if (m) return m.call(o);
    if (o && typeof o.length === "number") return {
        next: function () {
            if (o && i >= o.length) o = void 0;
            return { value: o && o[i++], done: !o };
        }
    };
    throw new TypeError(s ? "Object is not iterable." : "Symbol.iterator is not defined.");
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
var core_config_1 = __importDefault(require("../common/core.config"));
var ng_mocks_universe_1 = __importDefault(require("../common/ng-mocks-universe"));
var mock_helper_crawl_1 = __importDefault(require("./crawl/mock-helper.crawl"));
var mock_helper_reveal_1 = __importDefault(require("./crawl/mock-helper.reveal"));
var mock_helper_reveal_all_1 = __importDefault(require("./crawl/mock-helper.reveal-all"));
var mock_helper_change_1 = __importDefault(require("./cva/mock-helper.change"));
var mock_helper_touch_1 = __importDefault(require("./cva/mock-helper.touch"));
var mock_helper_click_1 = __importDefault(require("./events/mock-helper.click"));
var mock_helper_event_1 = __importDefault(require("./events/mock-helper.event"));
var mock_helper_trigger_1 = __importDefault(require("./events/mock-helper.trigger"));
var mock_helper_find_instance_1 = __importDefault(require("./find-instance/mock-helper.find-instance"));
var mock_helper_find_instances_1 = __importDefault(require("./find-instance/mock-helper.find-instances"));
var mock_helper_find_1 = __importDefault(require("./find/mock-helper.find"));
var mock_helper_find_all_1 = __importDefault(require("./find/mock-helper.find-all"));
var mock_helper_format_html_1 = __importDefault(require("./format/mock-helper.format-html"));
var mock_helper_format_text_1 = __importDefault(require("./format/mock-helper.format-text"));
var mock_helper_auto_spy_1 = __importDefault(require("./mock-helper.auto-spy"));
var mock_helper_default_mock_1 = __importDefault(require("./mock-helper.default-mock"));
var mock_helper_faster_1 = __importDefault(require("./mock-helper.faster"));
var mock_helper_flush_test_bed_1 = __importDefault(require("./mock-helper.flush-test-bed"));
var mock_helper_get_1 = __importDefault(require("./mock-helper.get"));
var mock_helper_global_exclude_1 = __importDefault(require("./mock-helper.global-exclude"));
var mock_helper_global_keep_1 = __importDefault(require("./mock-helper.global-keep"));
var mock_helper_global_mock_1 = __importDefault(require("./mock-helper.global-mock"));
var mock_helper_global_replace_1 = __importDefault(require("./mock-helper.global-replace"));
var mock_helper_global_wipe_1 = __importDefault(require("./mock-helper.global-wipe"));
var mock_helper_guts_1 = __importDefault(require("./mock-helper.guts"));
var mock_helper_ignore_on_console_1 = __importDefault(require("./mock-helper.ignore-on-console"));
var mock_helper_input_1 = __importDefault(require("./mock-helper.input"));
var mock_helper_output_1 = __importDefault(require("./mock-helper.output"));
var mock_helper_reset_1 = __importDefault(require("./mock-helper.reset"));
var mock_helper_stub_1 = __importDefault(require("./mock-helper.stub"));
var mock_helper_stub_member_1 = __importDefault(require("./mock-helper.stub-member"));
var mock_helper_throw_on_console_1 = __importDefault(require("./mock-helper.throw-on-console"));
var mock_helper_hide_1 = __importDefault(require("./render/mock-helper.hide"));
var mock_helper_render_1 = __importDefault(require("./render/mock-helper.render"));
var mock_helper_find_template_ref_1 = __importDefault(require("./template-ref/mock-helper.find-template-ref"));
var mock_helper_find_template_refs_1 = __importDefault(require("./template-ref/mock-helper.find-template-refs"));
exports.default = {
    autoSpy: mock_helper_auto_spy_1.default,
    change: mock_helper_change_1.default,
    click: mock_helper_click_1.default,
    config: function (config) {
        var e_1, _a;
        var flags = ng_mocks_universe_1.default.global.get('flags');
        try {
            for (var _b = __values(['onTestBedFlushNeed', 'onMockInstanceRestoreNeed']), _c = _b.next(); !_c.done; _c = _b.next()) {
                var flag = _c.value;
                if (config[flag] === null) {
                    flags[flag] = core_config_1.default[flag];
                }
                else if (config[flag] !== undefined) {
                    flags[flag] = config[flag];
                }
            }
        }
        catch (e_1_1) { e_1 = { error: e_1_1 }; }
        finally {
            try {
                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
            }
            finally { if (e_1) throw e_1.error; }
        }
        if (config.mockRenderCacheSize === null) {
            ng_mocks_universe_1.default.global.delete('mockRenderCacheSize');
        }
        else if (config.mockRenderCacheSize !== undefined) {
            ng_mocks_universe_1.default.global.set('mockRenderCacheSize', config.mockRenderCacheSize);
        }
    },
    crawl: mock_helper_crawl_1.default,
    defaultMock: mock_helper_default_mock_1.default,
    event: mock_helper_event_1.default,
    faster: mock_helper_faster_1.default,
    find: mock_helper_find_1.default,
    findAll: mock_helper_find_all_1.default,
    findInstance: mock_helper_find_instance_1.default,
    findInstances: mock_helper_find_instances_1.default,
    findTemplateRef: mock_helper_find_template_ref_1.default,
    findTemplateRefs: mock_helper_find_template_refs_1.default,
    flushTestBed: mock_helper_flush_test_bed_1.default,
    formatHtml: mock_helper_format_html_1.default,
    formatText: mock_helper_format_text_1.default,
    get: mock_helper_get_1.default,
    globalExclude: mock_helper_global_exclude_1.default,
    globalKeep: mock_helper_global_keep_1.default,
    globalMock: mock_helper_global_mock_1.default,
    globalReplace: mock_helper_global_replace_1.default,
    globalWipe: mock_helper_global_wipe_1.default,
    guts: mock_helper_guts_1.default,
    hide: mock_helper_hide_1.default,
    ignoreOnConsole: mock_helper_ignore_on_console_1.default,
    input: mock_helper_input_1.default,
    output: mock_helper_output_1.default,
    render: mock_helper_render_1.default,
    reset: mock_helper_reset_1.default,
    reveal: mock_helper_reveal_1.default,
    revealAll: mock_helper_reveal_all_1.default,
    stub: mock_helper_stub_1.default,
    stubMember: mock_helper_stub_member_1.default,
    throwOnConsole: mock_helper_throw_on_console_1.default,
    touch: mock_helper_touch_1.default,
    trigger: mock_helper_trigger_1.default,
};
//# sourceMappingURL=data:application/json;base64,