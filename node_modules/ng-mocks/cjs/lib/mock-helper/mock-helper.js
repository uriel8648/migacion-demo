"use strict";
// tslint:disable max-file-line-count
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.ngMocks = void 0;
var mock_helper_object_1 = __importDefault(require("./mock-helper.object"));
/**
 * @see https://ng-mocks.sudo.eu/api/ngMocks
 */
exports.ngMocks = mock_helper_object_1.default;
//# sourceMappingURL=data:application/json;base64,