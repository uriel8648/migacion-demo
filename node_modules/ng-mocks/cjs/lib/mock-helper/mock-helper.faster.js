"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
var testing_1 = require("@angular/core/testing");
var ng_mocks_universe_1 = __importDefault(require("../common/ng-mocks-universe"));
var mock_helper_faster_install_1 = __importDefault(require("./mock-helper.faster-install"));
var mock_helper_flush_test_bed_1 = __importDefault(require("./mock-helper.flush-test-bed"));
var resetFixtures = function (id) {
    var activeFixtures = (0, testing_1.getTestBed)()._activeFixtures || /* istanbul ignore next */ [];
    var active = 0;
    for (var i = activeFixtures.length - 1; i >= 0; i -= 1) {
        if (!activeFixtures[i].ngMocksStackId || activeFixtures[i].ngMocksStackId === id) {
            activeFixtures[i].ngMocksStackId = undefined;
        }
        else {
            active += 1;
        }
    }
    if (active === 0) {
        (0, mock_helper_flush_test_bed_1.default)();
    }
};
var idAdd = function (id) {
    var _a;
    var bulletStack = (_a = ng_mocks_universe_1.default.global.get('bullet:stack')) !== null && _a !== void 0 ? _a : [];
    bulletStack.push(id);
    ng_mocks_universe_1.default.global.set('bullet:stack', bulletStack);
    ng_mocks_universe_1.default.global.set('bullet:stack:id', id);
};
var idRemove = function (id) {
    var bulletStack = ng_mocks_universe_1.default.global.get('bullet:stack');
    bulletStack.splice(bulletStack.indexOf(id), 1);
    if (bulletStack.length) {
        ng_mocks_universe_1.default.global.set('bullet:stack:id', bulletStack[bulletStack.length - 1]);
    }
    else {
        ng_mocks_universe_1.default.global.delete('bullet:stack:id');
    }
    resetFixtures(id);
};
exports.default = (function () {
    (0, mock_helper_faster_install_1.default)();
    var idAll = {};
    var idEach = {};
    beforeAll(function () {
        if (ng_mocks_universe_1.default.global.has('bullet:customized')) {
            testing_1.TestBed.resetTestingModule();
        }
        ng_mocks_universe_1.default.global.set('bullet', true);
        idAdd(idAll);
    });
    beforeEach(function () {
        idAdd(idEach);
    });
    afterEach(function () {
        idRemove(idEach);
    });
    afterAll(function () {
        idRemove(idAll);
        ng_mocks_universe_1.default.global.delete('bullet');
        if (ng_mocks_universe_1.default.global.has('bullet:reset')) {
            testing_1.TestBed.resetTestingModule();
        }
    });
});
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibW9jay1oZWxwZXIuZmFzdGVyLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vLi4vbGlicy9uZy1tb2Nrcy9zcmMvbGliL21vY2staGVscGVyL21vY2staGVscGVyLmZhc3Rlci50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7OztBQUFBLGlEQUE4RTtBQUU5RSxrRkFBMEQ7QUFFMUQsNEZBQW1FO0FBQ25FLDRGQUFrRTtBQUVsRSxJQUFNLGFBQWEsR0FBRyxVQUFDLEVBQVM7SUFDOUIsSUFBTSxjQUFjLEdBQ2pCLElBQUEsb0JBQVUsR0FBVSxDQUFDLGVBQWUsSUFBSSwwQkFBMEIsQ0FBQyxFQUFFLENBQUM7SUFFekUsSUFBSSxNQUFNLEdBQUcsQ0FBQyxDQUFDO0lBQ2YsS0FBSyxJQUFJLENBQUMsR0FBRyxjQUFjLENBQUMsTUFBTSxHQUFHLENBQUMsRUFBRSxDQUFDLElBQUksQ0FBQyxFQUFFLENBQUMsSUFBSSxDQUFDLEVBQUU7UUFDdEQsSUFBSSxDQUFDLGNBQWMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxjQUFjLElBQUksY0FBYyxDQUFDLENBQUMsQ0FBQyxDQUFDLGNBQWMsS0FBSyxFQUFFLEVBQUU7WUFDaEYsY0FBYyxDQUFDLENBQUMsQ0FBQyxDQUFDLGNBQWMsR0FBRyxTQUFTLENBQUM7U0FDOUM7YUFBTTtZQUNMLE1BQU0sSUFBSSxDQUFDLENBQUM7U0FDYjtLQUNGO0lBQ0QsSUFBSSxNQUFNLEtBQUssQ0FBQyxFQUFFO1FBQ2hCLElBQUEsb0NBQXNCLEdBQUUsQ0FBQztLQUMxQjtBQUNILENBQUMsQ0FBQztBQUVGLElBQU0sS0FBSyxHQUFHLFVBQUMsRUFBTzs7SUFDcEIsSUFBTSxXQUFXLEdBQVUsTUFBQSwyQkFBZSxDQUFDLE1BQU0sQ0FBQyxHQUFHLENBQUMsY0FBYyxDQUFDLG1DQUFJLEVBQUUsQ0FBQztJQUM1RSxXQUFXLENBQUMsSUFBSSxDQUFDLEVBQUUsQ0FBQyxDQUFDO0lBQ3JCLDJCQUFlLENBQUMsTUFBTSxDQUFDLEdBQUcsQ0FBQyxjQUFjLEVBQUUsV0FBVyxDQUFDLENBQUM7SUFDeEQsMkJBQWUsQ0FBQyxNQUFNLENBQUMsR0FBRyxDQUFDLGlCQUFpQixFQUFFLEVBQUUsQ0FBQyxDQUFDO0FBQ3BELENBQUMsQ0FBQztBQUNGLElBQU0sUUFBUSxHQUFHLFVBQUMsRUFBTztJQUN2QixJQUFNLFdBQVcsR0FBVSwyQkFBZSxDQUFDLE1BQU0sQ0FBQyxHQUFHLENBQUMsY0FBYyxDQUFDLENBQUM7SUFDdEUsV0FBVyxDQUFDLE1BQU0sQ0FBQyxXQUFXLENBQUMsT0FBTyxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDO0lBQy9DLElBQUksV0FBVyxDQUFDLE1BQU0sRUFBRTtRQUN0QiwyQkFBZSxDQUFDLE1BQU0sQ0FBQyxHQUFHLENBQUMsaUJBQWlCLEVBQUUsV0FBVyxDQUFDLFdBQVcsQ0FBQyxNQUFNLEdBQUcsQ0FBQyxDQUFDLENBQUMsQ0FBQztLQUNwRjtTQUFNO1FBQ0wsMkJBQWUsQ0FBQyxNQUFNLENBQUMsTUFBTSxDQUFDLGlCQUFpQixDQUFDLENBQUM7S0FDbEQ7SUFFRCxhQUFhLENBQUMsRUFBVyxDQUFDLENBQUM7QUFDN0IsQ0FBQyxDQUFDO0FBRUYsbUJBQWU7SUFDYixJQUFBLG9DQUF1QixHQUFFLENBQUM7SUFFMUIsSUFBTSxLQUFLLEdBQUcsRUFBRSxDQUFDO0lBQ2pCLElBQU0sTUFBTSxHQUFHLEVBQUUsQ0FBQztJQUVsQixTQUFTLENBQUM7UUFDUixJQUFJLDJCQUFlLENBQUMsTUFBTSxDQUFDLEdBQUcsQ0FBQyxtQkFBbUIsQ0FBQyxFQUFFO1lBQ25ELGlCQUFPLENBQUMsa0JBQWtCLEVBQUUsQ0FBQztTQUM5QjtRQUNELDJCQUFlLENBQUMsTUFBTSxDQUFDLEdBQUcsQ0FBQyxRQUFRLEVBQUUsSUFBSSxDQUFDLENBQUM7UUFDM0MsS0FBSyxDQUFDLEtBQUssQ0FBQyxDQUFDO0lBQ2YsQ0FBQyxDQUFDLENBQUM7SUFFSCxVQUFVLENBQUM7UUFDVCxLQUFLLENBQUMsTUFBTSxDQUFDLENBQUM7SUFDaEIsQ0FBQyxDQUFDLENBQUM7SUFDSCxTQUFTLENBQUM7UUFDUixRQUFRLENBQUMsTUFBTSxDQUFDLENBQUM7SUFDbkIsQ0FBQyxDQUFDLENBQUM7SUFFSCxRQUFRLENBQUM7UUFDUCxRQUFRLENBQUMsS0FBSyxDQUFDLENBQUM7UUFDaEIsMkJBQWUsQ0FBQyxNQUFNLENBQUMsTUFBTSxDQUFDLFFBQVEsQ0FBQyxDQUFDO1FBQ3hDLElBQUksMkJBQWUsQ0FBQyxNQUFNLENBQUMsR0FBRyxDQUFDLGNBQWMsQ0FBQyxFQUFFO1lBQzlDLGlCQUFPLENBQUMsa0JBQWtCLEVBQUUsQ0FBQztTQUM5QjtJQUNILENBQUMsQ0FBQyxDQUFDO0FBQ0wsQ0FBQyxFQUFDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQ29tcG9uZW50Rml4dHVyZSwgZ2V0VGVzdEJlZCwgVGVzdEJlZCB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUvdGVzdGluZyc7XG5cbmltcG9ydCBuZ01vY2tzVW5pdmVyc2UgZnJvbSAnLi4vY29tbW9uL25nLW1vY2tzLXVuaXZlcnNlJztcblxuaW1wb3J0IG1vY2tIZWxwZXJGYXN0ZXJJbnN0YWxsIGZyb20gJy4vbW9jay1oZWxwZXIuZmFzdGVyLWluc3RhbGwnO1xuaW1wb3J0IG1vY2tIZWxwZXJGbHVzaFRlc3RCZWQgZnJvbSAnLi9tb2NrLWhlbHBlci5mbHVzaC10ZXN0LWJlZCc7XG5cbmNvbnN0IHJlc2V0Rml4dHVyZXMgPSAoaWQ6IG5ldmVyKSA9PiB7XG4gIGNvbnN0IGFjdGl2ZUZpeHR1cmVzOiBBcnJheTxDb21wb25lbnRGaXh0dXJlPGFueT4gJiB7IG5nTW9ja3NTdGFja0lkPzogYW55IH0+ID1cbiAgICAoZ2V0VGVzdEJlZCgpIGFzIGFueSkuX2FjdGl2ZUZpeHR1cmVzIHx8IC8qIGlzdGFuYnVsIGlnbm9yZSBuZXh0ICovIFtdO1xuXG4gIGxldCBhY3RpdmUgPSAwO1xuICBmb3IgKGxldCBpID0gYWN0aXZlRml4dHVyZXMubGVuZ3RoIC0gMTsgaSA+PSAwOyBpIC09IDEpIHtcbiAgICBpZiAoIWFjdGl2ZUZpeHR1cmVzW2ldLm5nTW9ja3NTdGFja0lkIHx8IGFjdGl2ZUZpeHR1cmVzW2ldLm5nTW9ja3NTdGFja0lkID09PSBpZCkge1xuICAgICAgYWN0aXZlRml4dHVyZXNbaV0ubmdNb2Nrc1N0YWNrSWQgPSB1bmRlZmluZWQ7XG4gICAgfSBlbHNlIHtcbiAgICAgIGFjdGl2ZSArPSAxO1xuICAgIH1cbiAgfVxuICBpZiAoYWN0aXZlID09PSAwKSB7XG4gICAgbW9ja0hlbHBlckZsdXNoVGVzdEJlZCgpO1xuICB9XG59O1xuXG5jb25zdCBpZEFkZCA9IChpZDogYW55KSA9PiB7XG4gIGNvbnN0IGJ1bGxldFN0YWNrOiBhbnlbXSA9IG5nTW9ja3NVbml2ZXJzZS5nbG9iYWwuZ2V0KCdidWxsZXQ6c3RhY2snKSA/PyBbXTtcbiAgYnVsbGV0U3RhY2sucHVzaChpZCk7XG4gIG5nTW9ja3NVbml2ZXJzZS5nbG9iYWwuc2V0KCdidWxsZXQ6c3RhY2snLCBidWxsZXRTdGFjayk7XG4gIG5nTW9ja3NVbml2ZXJzZS5nbG9iYWwuc2V0KCdidWxsZXQ6c3RhY2s6aWQnLCBpZCk7XG59O1xuY29uc3QgaWRSZW1vdmUgPSAoaWQ6IGFueSkgPT4ge1xuICBjb25zdCBidWxsZXRTdGFjazogYW55W10gPSBuZ01vY2tzVW5pdmVyc2UuZ2xvYmFsLmdldCgnYnVsbGV0OnN0YWNrJyk7XG4gIGJ1bGxldFN0YWNrLnNwbGljZShidWxsZXRTdGFjay5pbmRleE9mKGlkKSwgMSk7XG4gIGlmIChidWxsZXRTdGFjay5sZW5ndGgpIHtcbiAgICBuZ01vY2tzVW5pdmVyc2UuZ2xvYmFsLnNldCgnYnVsbGV0OnN0YWNrOmlkJywgYnVsbGV0U3RhY2tbYnVsbGV0U3RhY2subGVuZ3RoIC0gMV0pO1xuICB9IGVsc2Uge1xuICAgIG5nTW9ja3NVbml2ZXJzZS5nbG9iYWwuZGVsZXRlKCdidWxsZXQ6c3RhY2s6aWQnKTtcbiAgfVxuXG4gIHJlc2V0Rml4dHVyZXMoaWQgYXMgbmV2ZXIpO1xufTtcblxuZXhwb3J0IGRlZmF1bHQgKCkgPT4ge1xuICBtb2NrSGVscGVyRmFzdGVySW5zdGFsbCgpO1xuXG4gIGNvbnN0IGlkQWxsID0ge307XG4gIGNvbnN0IGlkRWFjaCA9IHt9O1xuXG4gIGJlZm9yZUFsbCgoKSA9PiB7XG4gICAgaWYgKG5nTW9ja3NVbml2ZXJzZS5nbG9iYWwuaGFzKCdidWxsZXQ6Y3VzdG9taXplZCcpKSB7XG4gICAgICBUZXN0QmVkLnJlc2V0VGVzdGluZ01vZHVsZSgpO1xuICAgIH1cbiAgICBuZ01vY2tzVW5pdmVyc2UuZ2xvYmFsLnNldCgnYnVsbGV0JywgdHJ1ZSk7XG4gICAgaWRBZGQoaWRBbGwpO1xuICB9KTtcblxuICBiZWZvcmVFYWNoKCgpID0+IHtcbiAgICBpZEFkZChpZEVhY2gpO1xuICB9KTtcbiAgYWZ0ZXJFYWNoKCgpID0+IHtcbiAgICBpZFJlbW92ZShpZEVhY2gpO1xuICB9KTtcblxuICBhZnRlckFsbCgoKSA9PiB7XG4gICAgaWRSZW1vdmUoaWRBbGwpO1xuICAgIG5nTW9ja3NVbml2ZXJzZS5nbG9iYWwuZGVsZXRlKCdidWxsZXQnKTtcbiAgICBpZiAobmdNb2Nrc1VuaXZlcnNlLmdsb2JhbC5oYXMoJ2J1bGxldDpyZXNldCcpKSB7XG4gICAgICBUZXN0QmVkLnJlc2V0VGVzdGluZ01vZHVsZSgpO1xuICAgIH1cbiAgfSk7XG59O1xuIl19